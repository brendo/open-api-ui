{
  "Error": {
    "type": "object",
    "properties": {
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "description"
        ]
      }
    },
    "required": [
      "error"
    ]
  },
  "accountAddress": {
    "description": "This is the schema for representing addresses.",
    "type": "object",
    "required": [
      "countryCode"
    ],
    "properties": {
      "line": {
        "description": "Lines of the address",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "countryCode": {
        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
        "type": "string",
        "minLength": 2,
        "maxLength": 2
      },
      "postalCode": {
        "type": "string",
        "description": "The post or zip code of this address."
      },
      "locality": {
        "type": "string",
        "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
      },
      "dependentLocality": {
        "type": "string",
        "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
      },
      "administrativeArea": {
        "type": "string",
        "description": "The administrative area of this address, ie. state."
      },
      "longitude": {
        "type": "number",
        "description": "The longitude value of a geocoded address."
      },
      "latitude": {
        "type": "number",
        "description": "The latitude value of a geocoded address."
      }
    }
  },
  "createAccountRequest": {
    "title": "Account",
    "description": "Account registration schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "account"
            ]
          },
          "attributes": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "invitationCode",
              "platform",
              "name",
              "email",
              "privacyPolicyDate",
              "tncAgreementDate",
              "headquartersCountry",
              "ipAddress"
            ],
            "properties": {
              "invitationCode": {
                "description": "Pre-generated Invitation code",
                "type": "string"
              },
              "platform": {
                "description": "One of predefined platforms",
                "enum": [
                  "test",
                  "custom",
                  "magento"
                ]
              },
              "name": {
                "description": "Name, eg: Company name",
                "type": "string"
              },
              "privacyPolicyDate": {
                "description": "Privacy policy accepted date",
                "type": "string",
                "format": "date-time"
              },
              "tncAgreementDate": {
                "description": "Terms and condition accepted date",
                "type": "string",
                "format": "date-time"
              },
              "headquartersCountry": {
                "description": "Country of the headquarters",
                "type": "string"
              },
              "email": {
                "description": "Email of the default user",
                "type": "string",
                "format": "email"
              },
              "password": {
                "description": "User password",
                "type": "string"
              },
              "firstName": {
                "description": "First name of the default user",
                "type": "string"
              },
              "lastName": {
                "description": "Last name  of the default user",
                "type": "string"
              },
              "mobile": {
                "description": "Mobile number",
                "type": "string"
              },
              "hostName": {
                "description": "Host name where the request came from",
                "type": "string",
                "format": "uri"
              },
              "ipAddress": {
                "description": "IP address where the request came from",
                "type": "string",
                "anyOf": [
                  {
                    "format": "ipv4"
                  },
                  {
                    "format": "ipv6"
                  }
                ]
              },
              "billingAddress": {
                "$ref": "#/definitions/accountAddress"
              }
            }
          }
        }
      }
    }
  },
  "createAccountResponse": {
    "title": "Account response",
    "description": "Account response schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "account"
            ]
          },
          "id": {
            "description": "Account id",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "bearerToken",
              "bearerTokenExpiry"
            ],
            "properties": {
              "bearerToken": {
                "description": "Bearer token",
                "type": "string"
              },
              "bearerTokenExpiry": {
                "description": "Bearer token expiry timestamp",
                "type": "number"
              }
            }
          }
        }
      }
    }
  },
  "createUserRequest": {
    "title": "User",
    "description": "Create user schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "attributes": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "firstName",
              "lastName",
              "password",
              "email",
              "bearerToken"
            ],
            "properties": {
              "firstName": {
                "description": "First name",
                "type": "string"
              },
              "lastName": {
                "description": "Last name",
                "type": "string"
              },
              "password": {
                "description": "Password",
                "type": "string"
              },
              "email": {
                "description": "Email of the user",
                "type": "string",
                "format": "email"
              },
              "bearerToken": {
                "description": "Bearer token of the account",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "createUserResponse": {
    "title": "User response",
    "description": "User response schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "id": {
            "description": "User id",
            "type": "string"
          },
          "attributes": {
            "type": "object"
          }
        }
      }
    }
  },
  "getAccountResponse": {
    "title": "Get account response",
    "description": "Get account response schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "account"
            ]
          },
          "id": {
            "description": "Account id",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "platform",
              "name",
              "privacyPolicyDate",
              "tncAgreementDate",
              "headquartersCountry",
              "ipAddress",
              "enterpriseBilling"
            ],
            "additionalProperties": false,
            "properties": {
              "platform": {
                "description": "Platform",
                "type": "string"
              },
              "name": {
                "description": "name",
                "type": "string"
              },
              "privacyPolicyDate": {
                "description": "Privacy policy accepted date",
                "type": "string"
              },
              "tncAgreementDate": {
                "description": "Terms and condition accepted date",
                "type": "string"
              },
              "headquartersCountry": {
                "description": "Country of the headquarters",
                "type": "string"
              },
              "hostName": {
                "description": "Host name where the request came from",
                "type": "string",
                "format": "uri"
              },
              "ipAddress": {
                "description": "IP address where the request came from",
                "type": "string",
                "anyOf": [
                  {
                    "format": "ipv4"
                  },
                  {
                    "format": "ipv6"
                  }
                ]
              },
              "enterpriseBilling": {
                "description": "If enterprise billing or not",
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  },
  "getAccountMarcoResponse": {
    "type": "object",
    "properties": {
      "atoms": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "implements": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "string"
                }
              },
              "required": [
                "task"
              ]
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "object",
                  "properties": {
                    "messageKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "messageKey"
                  ]
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "form": {
                        "type": "object",
                        "properties": {
                          "controlSets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "controls": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "ref": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "object",
                                        "properties": {
                                          "messageKey": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "messageKey"
                                        ]
                                      },
                                      "validation": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "rule": {
                                              "type": "string"
                                            },
                                            "messages": {
                                              "type": "object",
                                              "properties": {
                                                "required": {
                                                  "type": "object",
                                                  "properties": {
                                                    "messageKey": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "messageKey"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "required"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "rule",
                                            "messages"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "ref",
                                      "type",
                                      "title",
                                      "validation"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "controls"
                              ]
                            }
                          },
                          "httpRequest": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string"
                              },
                              "method": {
                                "type": "string"
                              },
                              "requestSchema": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "url",
                              "method",
                              "requestSchema"
                            ]
                          }
                        },
                        "required": [
                          "controlSets",
                          "httpRequest"
                        ]
                      },
                      "next": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "done": {
                              "type": "boolean"
                            },
                            "label": {
                              "type": "object",
                              "properties": {
                                "messageKey": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageKey"
                              ]
                            }
                          },
                          "required": [
                            "done",
                            "label"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "form",
                      "next"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "steps"
              ]
            }
          },
          "required": [
            "type",
            "implements",
            "workflow"
          ]
        }
      }
    },
    "required": [
      "atoms"
    ]
  },
  "getUsersResponse": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "user"
              ]
            },
            "id": {
              "description": "User id",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "required": [
                "email",
                "firstName",
                "lastName"
              ],
              "additionalProperties": false,
              "properties": {
                "firstName": {
                  "description": "First name",
                  "type": "string"
                },
                "lastName": {
                  "description": "Last name",
                  "type": "string"
                },
                "email": {
                  "description": "Email of the user",
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        }
      }
    }
  },
  "getUserResponse": {
    "title": "Get user response",
    "description": "Get user response schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "id": {
            "description": "User id.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "firstName",
              "lastName",
              "email"
            ],
            "additionalProperties": false,
            "properties": {
              "firstName": {
                "description": "First name",
                "type": "string"
              },
              "lastName": {
                "description": "Last name",
                "type": "string"
              },
              "email": {
                "description": "Email of the user",
                "type": "string",
                "format": "email"
              }
            }
          }
        }
      }
    }
  },
  "listAccountsResponse": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "account"
              ]
            },
            "id": {
              "description": "Account id",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "required": [
                "platform",
                "name",
                "privacyPolicyDate",
                "tncAgreementDate",
                "headquartersCountry",
                "ipAddress",
                "enterpriseBilling"
              ],
              "additionalProperties": false,
              "properties": {
                "platform": {
                  "description": "Platform",
                  "type": "string"
                },
                "name": {
                  "description": "name",
                  "type": "string"
                },
                "privacyPolicyDate": {
                  "description": "Privacy policy accepted date",
                  "type": "string"
                },
                "tncAgreementDate": {
                  "description": "Terms and condition accepted date",
                  "type": "string"
                },
                "headquartersCountry": {
                  "description": "Country of the headquarters",
                  "type": "string"
                },
                "hostName": {
                  "description": "Host name where the request came from",
                  "type": "string",
                  "format": "uri"
                },
                "ipAddress": {
                  "description": "IP address where the request came from",
                  "type": "string",
                  "anyOf": [
                    {
                      "format": "ipv4"
                    },
                    {
                      "format": "ipv6"
                    }
                  ]
                },
                "enterpriseBilling": {
                  "description": "If enterprise billing or not",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "updateAccountRequest": {
    "title": "Account update",
    "description": "Account update schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "account"
            ]
          },
          "id": {
            "description": "GUID of the account.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "anyOf": [
              {
                "required": [
                  "name"
                ]
              },
              {
                "required": [
                  "privacyPolicyDate"
                ]
              },
              {
                "required": [
                  "tncAgreementDate"
                ]
              },
              {
                "required": [
                  "hostName"
                ]
              }
            ],
            "additionalProperties": false,
            "properties": {
              "name": {
                "description": "name",
                "type": "string"
              },
              "privacyPolicyDate": {
                "description": "Privacy policy accepted date",
                "type": "string",
                "format": "date-time"
              },
              "tncAgreementDate": {
                "description": "Terms and condition accepted date",
                "type": "string",
                "format": "date-time"
              },
              "hostName": {
                "description": "Host name where the request came from",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  },
  "updateAccountResponse": {
    "title": "Update account response",
    "description": "Update account response schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "account"
            ]
          },
          "id": {
            "description": "Account id.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "platform",
              "name",
              "privacyPolicyDate",
              "tncAgreementDate",
              "headquartersCountry",
              "hostName",
              "ipAddress",
              "enterpriseBilling"
            ],
            "additionalProperties": false,
            "properties": {
              "platform": {
                "description": "Platform",
                "type": "string"
              },
              "name": {
                "description": "name",
                "type": "string"
              },
              "privacyPolicyDate": {
                "description": "Privacy policy accepted date",
                "type": "string"
              },
              "tncAgreementDate": {
                "description": "Terms and condition accepted date",
                "type": "string"
              },
              "headquartersCountry": {
                "description": "Country of the headquarters",
                "type": "string"
              },
              "hostName": {
                "description": "Host name where the request came from",
                "type": "string",
                "format": "uri"
              },
              "ipAddress": {
                "description": "IP address where the request came from",
                "type": "string",
                "anyOf": [
                  {
                    "format": "ipv4"
                  },
                  {
                    "format": "ipv6"
                  }
                ]
              },
              "enterpriseBilling": {
                "description": "If enterprise billing or not",
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  },
  "updateUserRequest": {
    "title": "User update",
    "description": "Update user schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "id": {
            "description": "GUID of the user.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "anyOf": [
              {
                "required": [
                  "firstName"
                ]
              },
              {
                "required": [
                  "lastName"
                ]
              }
            ],
            "additionalProperties": false,
            "properties": {
              "firstName": {
                "description": "First name",
                "type": "string"
              },
              "lastName": {
                "description": "Last name",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "updateUserResponse": {
    "title": "Update user response",
    "description": "Update user response schema",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "id": {
            "description": "GUID of the user.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "email": {
                "description": "Email of the user",
                "type": "string",
                "format": "email"
              },
              "firstName": {
                "description": "First name",
                "type": "string"
              },
              "lastName": {
                "description": "Last name",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "ErrorInSchema": {
    "type": "object",
    "properties": {
      "error": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "keyword": {
                  "type": "string"
                },
                "dataPath": {
                  "type": "string"
                },
                "schemaPath": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "format": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "format"
                  ]
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "keyword",
                "dataPath",
                "schemaPath",
                "params",
                "message"
              ]
            }
          }
        },
        "required": [
          "description",
          "code",
          "details"
        ]
      }
    },
    "required": [
      "error"
    ]
  },
  "Address": {
    "description": "This is the schema for representing an address",
    "type": "object",
    "required": [
      "countryCode"
    ],
    "properties": {
      "isOrganisation": {
        "description": "Does this address belong to an organisation?",
        "type": "boolean"
      },
      "line": {
        "description": "Lines of the address",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "countryCode": {
        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
        "type": "string",
        "minLength": 2,
        "maxLength": 2
      },
      "postalCode": {
        "type": "string",
        "description": "The post or zip code of this address."
      },
      "locality": {
        "type": "string",
        "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
      },
      "dependentLocality": {
        "type": "string",
        "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
      },
      "administrativeArea": {
        "type": "string",
        "description": "The administrative area of this address, ie. state."
      },
      "longitude": {
        "type": "number",
        "description": "The longitude value of a geocoded address."
      },
      "latitude": {
        "type": "number",
        "description": "The latitude value of a geocoded address."
      }
    }
  },
  "VerificationRequest": {
    "description": "Schema for representing an address verification request.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "address"
            ]
          },
          "attributes": {
            "$ref": "#/definitions/Address"
          }
        }
      }
    }
  },
  "VerificationResponse": {
    "description": "Schema for representing an address verification response.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "address"
            ]
          },
          "attributes": {
            "$ref": "#/definitions/Address"
          }
        }
      }
    }
  },
  "CompletionRequest": {
    "description": "Schema for representing an address completion request.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "address"
            ]
          },
          "attributes": {
            "$ref": "#/definitions/Address"
          }
        }
      }
    }
  },
  "CompletionResponse": {
    "description": "Schema for representing an address completion response.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "address"
              ]
            },
            "attributes": {
              "$ref": "#/definitions/Address"
            }
          }
        }
      }
    }
  },
  "JsonApiError": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "status": {
        "type": "string"
      },
      "title": {
        "type": "string"
      },
      "detail": {
        "type": "string"
      },
      "meta": {
        "type": "object"
      },
      "code": {
        "type": "string"
      },
      "links": {
        "type": "object"
      },
      "source": {
        "type": "object"
      }
    }
  },
  "Container": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "container"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Merchant container name.",
                "type": "string"
              },
              "type": {
                "description": "The type of container.",
                "enum": [
                  "Box",
                  "Carton",
                  "Crate",
                  "Cylinder",
                  "Document Envelope",
                  "Flat Pack",
                  "Letter",
                  "Pallet",
                  "Parcel",
                  "Satchel/Bag",
                  "Other"
                ]
              },
              "outerDimensions": {
                "description": "Dimensions object describing the actual (outer) dimensions of the container, which are used for calculating freight cost",
                "type": "object",
                "properties": {
                  "length": {
                    "description": "The length of the container",
                    "type": "number"
                  },
                  "width": {
                    "description": "The width of the container",
                    "type": "number"
                  },
                  "height": {
                    "description": "The height of the container.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the dimensions.",
                    "enum": [
                      "mm",
                      "millimeter",
                      "millimeters",
                      "millimetre",
                      "millimetres",
                      "cm",
                      "centimeter",
                      "centimeters",
                      "centimetre",
                      "centimetres",
                      "m",
                      "meter",
                      "metre",
                      "ft",
                      "foot",
                      "feet",
                      "in",
                      "inch",
                      "yd",
                      "yard"
                    ]
                  }
                },
                "required": [
                  "length",
                  "width",
                  "height",
                  "unitOfMeasurement"
                ]
              },
              "innerDimensions": {
                "description": "Dimensions object describing the available (inner) dimensions of the container, which are used to identify available space for packing",
                "type": "object",
                "properties": {
                  "length": {
                    "description": "The length of the container",
                    "type": "number"
                  },
                  "width": {
                    "description": "The width of the container",
                    "type": "number"
                  },
                  "height": {
                    "description": "The height of the container.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the dimensions.",
                    "enum": [
                      "mm",
                      "millimeter",
                      "millimeters",
                      "millimetre",
                      "millimetres",
                      "cm",
                      "centimeter",
                      "centimeters",
                      "centimetre",
                      "centimetres",
                      "m",
                      "meter",
                      "metre",
                      "ft",
                      "foot",
                      "feet",
                      "in",
                      "inch",
                      "yd",
                      "yard"
                    ]
                  }
                },
                "required": [
                  "length",
                  "width",
                  "height",
                  "unitOfMeasurement"
                ]
              },
              "tareWeight": {
                "description": "The unladen weight of the container",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The value of the weight unit.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the weight.",
                    "enum": [
                      "g",
                      "gram",
                      "grams",
                      "oz",
                      "ounce",
                      "ounces",
                      "kg",
                      "kilogram",
                      "kilograms",
                      "lb",
                      "pound",
                      "pounds"
                    ]
                  }
                },
                "required": [
                  "value",
                  "unitOfMeasurement"
                ]
              },
              "maximumWeight": {
                "description": "The maximum weight that the container can hold",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The value of the weight unit.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the weight.",
                    "enum": [
                      "g",
                      "gram",
                      "grams",
                      "oz",
                      "ounce",
                      "ounces",
                      "kg",
                      "kilogram",
                      "kilograms",
                      "lb",
                      "pound",
                      "pounds"
                    ]
                  }
                },
                "required": [
                  "value",
                  "unitOfMeasurement"
                ]
              }
            },
            "required": [
              "name",
              "type",
              "outerDimensions",
              "innerDimensions",
              "tareWeight",
              "maximumWeight"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      }
    },
    "required": [
      "data"
    ]
  },
  "StoredContainer": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "enum": [
              "container"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Merchant container name.",
                "type": "string"
              },
              "type": {
                "description": "The type of container.",
                "enum": [
                  "Box",
                  "Carton",
                  "Crate",
                  "Cylinder",
                  "Document Envelope",
                  "Flat Pack",
                  "Letter",
                  "Pallet",
                  "Parcel",
                  "Satchel/Bag",
                  "Other"
                ]
              },
              "outerDimensions": {
                "description": "Dimensions object describing the actual (outer) dimensions of the container, which are used for calculating freight cost",
                "type": "object",
                "properties": {
                  "length": {
                    "description": "The length of the container",
                    "type": "number"
                  },
                  "width": {
                    "description": "The width of the container",
                    "type": "number"
                  },
                  "height": {
                    "description": "The height of the container.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the dimensions.",
                    "enum": [
                      "mm",
                      "millimeter",
                      "millimeters",
                      "millimetre",
                      "millimetres",
                      "cm",
                      "centimeter",
                      "centimeters",
                      "centimetre",
                      "centimetres",
                      "m",
                      "meter",
                      "metre",
                      "ft",
                      "foot",
                      "feet",
                      "in",
                      "inch",
                      "yd",
                      "yard"
                    ]
                  }
                },
                "required": [
                  "length",
                  "width",
                  "height",
                  "unitOfMeasurement"
                ]
              },
              "innerDimensions": {
                "description": "Dimensions object describing the available (inner) dimensions of the container, which are used to identify available space for packing",
                "type": "object",
                "properties": {
                  "length": {
                    "description": "The length of the container",
                    "type": "number"
                  },
                  "width": {
                    "description": "The width of the container",
                    "type": "number"
                  },
                  "height": {
                    "description": "The height of the container.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the dimensions.",
                    "enum": [
                      "mm",
                      "millimeter",
                      "millimeters",
                      "millimetre",
                      "millimetres",
                      "cm",
                      "centimeter",
                      "centimeters",
                      "centimetre",
                      "centimetres",
                      "m",
                      "meter",
                      "metre",
                      "ft",
                      "foot",
                      "feet",
                      "in",
                      "inch",
                      "yd",
                      "yard"
                    ]
                  }
                },
                "required": [
                  "length",
                  "width",
                  "height",
                  "unitOfMeasurement"
                ]
              },
              "tareWeight": {
                "description": "The unladen weight of the container",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The value of the weight unit.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the weight.",
                    "enum": [
                      "g",
                      "gram",
                      "grams",
                      "oz",
                      "ounce",
                      "ounces",
                      "kg",
                      "kilogram",
                      "kilograms",
                      "lb",
                      "pound",
                      "pounds"
                    ]
                  }
                },
                "required": [
                  "value",
                  "unitOfMeasurement"
                ]
              },
              "maximumWeight": {
                "description": "The maximum weight that the container can hold",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The value of the weight unit.",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The measurement unit of the weight.",
                    "enum": [
                      "g",
                      "gram",
                      "grams",
                      "oz",
                      "ounce",
                      "ounces",
                      "kg",
                      "kilogram",
                      "kilograms",
                      "lb",
                      "pound",
                      "pounds"
                    ]
                  }
                },
                "required": [
                  "value",
                  "unitOfMeasurement"
                ]
              }
            },
            "required": [
              "name",
              "type",
              "outerDimensions",
              "innerDimensions",
              "tareWeight",
              "maximumWeight"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      }
    },
    "required": [
      "data"
    ]
  },
  "StoredContainerCollection": {
    "type": "object",
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "container"
                  ]
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Merchant container name.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of container.",
                  "enum": [
                    "Box",
                    "Carton",
                    "Crate",
                    "Cylinder",
                    "Document Envelope",
                    "Flat Pack",
                    "Letter",
                    "Pallet",
                    "Parcel",
                    "Satchel/Bag",
                    "Other"
                  ]
                },
                "outerDimensions": {
                  "description": "Dimensions object describing the actual (outer) dimensions of the container, which are used for calculating freight cost",
                  "type": "object",
                  "properties": {
                    "length": {
                      "description": "The length of the container",
                      "type": "number"
                    },
                    "width": {
                      "description": "The width of the container",
                      "type": "number"
                    },
                    "height": {
                      "description": "The height of the container.",
                      "type": "number"
                    },
                    "unitOfMeasurement": {
                      "description": "The measurement unit of the dimensions.",
                      "enum": [
                        "mm",
                        "millimeter",
                        "millimeters",
                        "millimetre",
                        "millimetres",
                        "cm",
                        "centimeter",
                        "centimeters",
                        "centimetre",
                        "centimetres",
                        "m",
                        "meter",
                        "metre",
                        "ft",
                        "foot",
                        "feet",
                        "in",
                        "inch",
                        "yd",
                        "yard"
                      ]
                    }
                  },
                  "required": [
                    "length",
                    "width",
                    "height",
                    "unitOfMeasurement"
                  ]
                },
                "innerDimensions": {
                  "description": "Dimensions object describing the available (inner) dimensions of the container, which are used to identify available space for packing",
                  "type": "object",
                  "properties": {
                    "length": {
                      "description": "The length of the container",
                      "type": "number"
                    },
                    "width": {
                      "description": "The width of the container",
                      "type": "number"
                    },
                    "height": {
                      "description": "The height of the container.",
                      "type": "number"
                    },
                    "unitOfMeasurement": {
                      "description": "The measurement unit of the dimensions.",
                      "enum": [
                        "mm",
                        "millimeter",
                        "millimeters",
                        "millimetre",
                        "millimetres",
                        "cm",
                        "centimeter",
                        "centimeters",
                        "centimetre",
                        "centimetres",
                        "m",
                        "meter",
                        "metre",
                        "ft",
                        "foot",
                        "feet",
                        "in",
                        "inch",
                        "yd",
                        "yard"
                      ]
                    }
                  },
                  "required": [
                    "length",
                    "width",
                    "height",
                    "unitOfMeasurement"
                  ]
                },
                "tareWeight": {
                  "description": "The unladen weight of the container",
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "The value of the weight unit.",
                      "type": "number"
                    },
                    "unitOfMeasurement": {
                      "description": "The measurement unit of the weight.",
                      "enum": [
                        "g",
                        "gram",
                        "grams",
                        "oz",
                        "ounce",
                        "ounces",
                        "kg",
                        "kilogram",
                        "kilograms",
                        "lb",
                        "pound",
                        "pounds"
                      ]
                    }
                  },
                  "required": [
                    "value",
                    "unitOfMeasurement"
                  ]
                },
                "maximumWeight": {
                  "description": "The maximum weight that the container can hold",
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "The value of the weight unit.",
                      "type": "number"
                    },
                    "unitOfMeasurement": {
                      "description": "The measurement unit of the weight.",
                      "enum": [
                        "g",
                        "gram",
                        "grams",
                        "oz",
                        "ounce",
                        "ounces",
                        "kg",
                        "kilogram",
                        "kilograms",
                        "lb",
                        "pound",
                        "pounds"
                      ]
                    }
                  },
                  "required": [
                    "value",
                    "unitOfMeasurement"
                  ]
                }
              },
              "required": [
                "name",
                "type",
                "outerDimensions",
                "innerDimensions",
                "tareWeight",
                "maximumWeight"
              ]
            }
          ]
        }
      }
    },
    "required": [
      "data"
    ]
  },
  "Location": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "location"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Merchant location name.",
                "type": "string"
              },
              "type": {
                "description": "The type of location.",
                "enum": [
                  "Store",
                  "Warehouse",
                  "Drop Shipper",
                  "Collection Point",
                  "Click & Collect",
                  "Headquarters"
                ]
              },
              "isDefault": {
                "description": "Indicates whether or not this is the default shipping origin",
                "type": "boolean"
              },
              "address": {
                "description": "This is the schema for representing an address",
                "type": "object",
                "required": [
                  "countryCode"
                ],
                "properties": {
                  "isOrganisation": {
                    "description": "Does this address belong to an organisation?",
                    "type": "boolean"
                  },
                  "line": {
                    "description": "Lines of the address",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "countryCode": {
                    "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "The post or zip code of this address."
                  },
                  "locality": {
                    "type": "string",
                    "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                  },
                  "dependentLocality": {
                    "type": "string",
                    "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                  },
                  "administrativeArea": {
                    "type": "string",
                    "description": "The administrative area of this address, ie. state."
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude value of a geocoded address."
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude value of a geocoded address."
                  }
                }
              },
              "entity": {
                "description": "The entity assigned to the location",
                "type": "object",
                "properties": {
                  "organisationName": {
                    "type": "string",
                    "description": "Organisation name of this entity."
                  },
                  "personFirstName": {
                    "type": "string",
                    "description": "First name of this entity."
                  },
                  "personLastName": {
                    "type": "string",
                    "description": "Last name of this entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of this entity.",
                    "format": "email"
                  },
                  "phoneNumbers": {
                    "type": "array",
                    "description": "List of phone number(s) of this entity",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1
                  },
                  "faxNumber": {
                    "type": "string"
                  }
                },
                "required": [
                  "phoneNumbers"
                ]
              },
              "uniqueId": {
                "description": "Merchant specified unique ID.",
                "type": "string"
              },
              "enabled": {
                "description": "Indicates whether or not this location is enabled",
                "type": "boolean",
                "default": true
              },
              "geodata": {
                "description": "Geographical data describing the location",
                "type": "object",
                "properties": {
                  "zone": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the zone",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of zone",
                        "type": "string"
                      },
                      "points": {
                        "description": "The points of the zone",
                        "type": "array",
                        "items": [
                          {
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "points"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      }
    },
    "required": [
      "data"
    ]
  },
  "StoredLocation": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          },
          "type": {
            "enum": [
              "location"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Merchant location name.",
                "type": "string"
              },
              "type": {
                "description": "The type of location.",
                "enum": [
                  "Store",
                  "Warehouse",
                  "Drop Shipper",
                  "Collection Point",
                  "Click & Collect",
                  "Headquarters"
                ]
              },
              "isDefault": {
                "description": "Indicates whether or not this is the default shipping origin",
                "type": "boolean"
              },
              "address": {
                "description": "This is the schema for representing an address",
                "type": "object",
                "required": [
                  "countryCode"
                ],
                "properties": {
                  "isOrganisation": {
                    "description": "Does this address belong to an organisation?",
                    "type": "boolean"
                  },
                  "line": {
                    "description": "Lines of the address",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "countryCode": {
                    "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "The post or zip code of this address."
                  },
                  "locality": {
                    "type": "string",
                    "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                  },
                  "dependentLocality": {
                    "type": "string",
                    "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                  },
                  "administrativeArea": {
                    "type": "string",
                    "description": "The administrative area of this address, ie. state."
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude value of a geocoded address."
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude value of a geocoded address."
                  }
                }
              },
              "entity": {
                "description": "The entity assigned to the location",
                "type": "object",
                "properties": {
                  "organisationName": {
                    "type": "string",
                    "description": "Organisation name of this entity."
                  },
                  "personFirstName": {
                    "type": "string",
                    "description": "First name of this entity."
                  },
                  "personLastName": {
                    "type": "string",
                    "description": "Last name of this entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of this entity.",
                    "format": "email"
                  },
                  "phoneNumbers": {
                    "type": "array",
                    "description": "List of phone number(s) of this entity",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1
                  },
                  "faxNumber": {
                    "type": "string"
                  }
                },
                "required": [
                  "phoneNumbers"
                ]
              },
              "uniqueId": {
                "description": "Merchant specified unique ID.",
                "type": "string"
              },
              "enabled": {
                "description": "Indicates whether or not this location is enabled",
                "type": "boolean",
                "default": true
              },
              "geodata": {
                "description": "Geographical data describing the location",
                "type": "object",
                "properties": {
                  "zone": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the zone",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of zone",
                        "type": "string"
                      },
                      "points": {
                        "description": "The points of the zone",
                        "type": "array",
                        "items": [
                          {
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "points"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      }
    },
    "required": [
      "data"
    ]
  },
  "StoredLocationCollection": {
    "type": "object",
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            },
            "type": {
              "enum": [
                "location"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Merchant location name.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of location.",
                  "enum": [
                    "Store",
                    "Warehouse",
                    "Drop Shipper",
                    "Collection Point",
                    "Click & Collect",
                    "Headquarters"
                  ]
                },
                "isDefault": {
                  "description": "Indicates whether or not this is the default shipping origin",
                  "type": "boolean"
                },
                "address": {
                  "description": "This is the schema for representing an address",
                  "type": "object",
                  "required": [
                    "countryCode"
                  ],
                  "properties": {
                    "isOrganisation": {
                      "description": "Does this address belong to an organisation?",
                      "type": "boolean"
                    },
                    "line": {
                      "description": "Lines of the address",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "countryCode": {
                      "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 2
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "The post or zip code of this address."
                    },
                    "locality": {
                      "type": "string",
                      "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                    },
                    "dependentLocality": {
                      "type": "string",
                      "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                    },
                    "administrativeArea": {
                      "type": "string",
                      "description": "The administrative area of this address, ie. state."
                    },
                    "longitude": {
                      "type": "number",
                      "description": "The longitude value of a geocoded address."
                    },
                    "latitude": {
                      "type": "number",
                      "description": "The latitude value of a geocoded address."
                    }
                  }
                },
                "entity": {
                  "description": "The entity assigned to the location",
                  "type": "object",
                  "properties": {
                    "organisationName": {
                      "type": "string",
                      "description": "Organisation name of this entity."
                    },
                    "personFirstName": {
                      "type": "string",
                      "description": "First name of this entity."
                    },
                    "personLastName": {
                      "type": "string",
                      "description": "Last name of this entity."
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of this entity.",
                      "format": "email"
                    },
                    "phoneNumbers": {
                      "type": "array",
                      "description": "List of phone number(s) of this entity",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1
                    },
                    "faxNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "phoneNumbers"
                  ]
                },
                "uniqueId": {
                  "description": "Merchant specified unique ID.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Indicates whether or not this location is enabled",
                  "type": "boolean",
                  "default": true
                },
                "geodata": {
                  "description": "Geographical data describing the location",
                  "type": "object",
                  "properties": {
                    "zone": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the zone",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of zone",
                          "type": "string"
                        },
                        "points": {
                          "description": "The points of the zone",
                          "type": "array",
                          "items": [
                            {
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "points"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": [
            "id",
            "type",
            "attributes"
          ]
        }
      }
    },
    "required": [
      "data"
    ]
  },
  "ShipmentAttributes": {
    "description": "The Shipment Creation Request Schema",
    "type": "object",
    "required": [
      "origin",
      "destination",
      "pickupAt",
      "packages"
    ],
    "properties": {
      "pickupAt": {
        "type": "string",
        "description": "The expected pickup time",
        "format": "date-time"
      },
      "expectedAt": {
        "type": "string",
        "description": "An expected delivery date-time",
        "format": "date-time"
      },
      "customerReference": {
        "description": "A consistent identifier that represents a clients customer",
        "type": "string"
      },
      "origin": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Merchant location name.",
            "type": "string"
          },
          "type": {
            "description": "The type of location.",
            "enum": [
              "Store",
              "Warehouse",
              "Drop Shipper",
              "Collection Point",
              "Click & Collect",
              "Headquarters"
            ]
          },
          "address": {
            "description": "This is the schema for representing an address",
            "type": "object",
            "required": [
              "countryCode"
            ],
            "properties": {
              "isOrganisation": {
                "description": "Does this address belong to an organisation?",
                "type": "boolean"
              },
              "line": {
                "description": "Lines of the address",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryCode": {
                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "postalCode": {
                "type": "string",
                "description": "The post or zip code of this address."
              },
              "locality": {
                "type": "string",
                "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
              },
              "dependentLocality": {
                "type": "string",
                "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
              },
              "administrativeArea": {
                "type": "string",
                "description": "The administrative area of this address, ie. state."
              },
              "longitude": {
                "type": "number",
                "description": "The longitude value of a geocoded address."
              },
              "latitude": {
                "type": "number",
                "description": "The latitude value of a geocoded address."
              }
            }
          },
          "contact": {
            "description": "This is the schema for representing entity",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "organisationName": {
                "type": "string",
                "description": "Organisation name of this entity."
              },
              "personFirstName": {
                "type": "string",
                "description": "First name of this entity."
              },
              "personLastName": {
                "type": "string",
                "description": "Last name of this entity."
              },
              "email": {
                "type": "string",
                "description": "Email of this entity.",
                "format": "email"
              },
              "phoneNumbers": {
                "type": "array",
                "description": "List of phone number(s) of this entity",
                "items": {
                  "type": "string"
                }
              },
              "faxNumber": {
                "type": "string"
              },
              "nationalIdentificationNumber": {
                "type": "string",
                "description": "National identification number of this entity, ie. INSEE code (France)"
              },
              "taxIdentificationNumber": {
                "type": "string",
                "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
              }
            }
          },
          "customAttributes": {
            "default": [],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "value": {
                  "type": [
                    "number",
                    "integer",
                    "string",
                    "boolean"
                  ]
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "destination": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Merchant location name.",
            "type": "string"
          },
          "type": {
            "description": "The type of location.",
            "enum": [
              "Store",
              "Warehouse",
              "Drop Shipper",
              "Collection Point",
              "Click & Collect",
              "Headquarters"
            ]
          },
          "address": {
            "description": "This is the schema for representing an address",
            "type": "object",
            "required": [
              "countryCode"
            ],
            "properties": {
              "isOrganisation": {
                "description": "Does this address belong to an organisation?",
                "type": "boolean"
              },
              "line": {
                "description": "Lines of the address",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryCode": {
                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "postalCode": {
                "type": "string",
                "description": "The post or zip code of this address."
              },
              "locality": {
                "type": "string",
                "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
              },
              "dependentLocality": {
                "type": "string",
                "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
              },
              "administrativeArea": {
                "type": "string",
                "description": "The administrative area of this address, ie. state."
              },
              "longitude": {
                "type": "number",
                "description": "The longitude value of a geocoded address."
              },
              "latitude": {
                "type": "number",
                "description": "The latitude value of a geocoded address."
              }
            }
          },
          "contact": {
            "description": "This is the schema for representing entity",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "organisationName": {
                "type": "string",
                "description": "Organisation name of this entity."
              },
              "personFirstName": {
                "type": "string",
                "description": "First name of this entity."
              },
              "personLastName": {
                "type": "string",
                "description": "Last name of this entity."
              },
              "email": {
                "type": "string",
                "description": "Email of this entity.",
                "format": "email"
              },
              "phoneNumbers": {
                "type": "array",
                "description": "List of phone number(s) of this entity",
                "items": {
                  "type": "string"
                }
              },
              "faxNumber": {
                "type": "string"
              },
              "nationalIdentificationNumber": {
                "type": "string",
                "description": "National identification number of this entity, ie. INSEE code (France)"
              },
              "taxIdentificationNumber": {
                "type": "string",
                "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
              }
            }
          },
          "customAttributes": {
            "default": [],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "value": {
                  "type": [
                    "number",
                    "integer",
                    "string",
                    "boolean"
                  ]
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "packages": {
        "type": "array",
        "items": {
          "description": "This is the schema for representing packages",
          "type": "object",
          "required": [
            "id",
            "grossWeight",
            "dimensions"
          ],
          "properties": {
            "id": {
              "description": "id of the package.",
              "type": "string"
            },
            "grossWeight": {
              "type": "object",
              "required": [
                "value",
                "unitOfMeasurement"
              ],
              "properties": {
                "value": {
                  "description": "The value of the weight unit",
                  "type": "number"
                },
                "unitOfMeasurement": {
                  "description": "The weight unit the value is",
                  "enum": [
                    "g",
                    "gram",
                    "oz",
                    "ounce",
                    "kg",
                    "kilogram",
                    "lb",
                    "pound"
                  ]
                }
              }
            },
            "dimensions": {
              "description": "This is the schema for representing dimensions",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "length",
                "width",
                "height",
                "unitOfMeasurement"
              ],
              "properties": {
                "length": {
                  "type": "number"
                },
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "unitOfMeasurement": {
                  "description": "The distance unit the dimension's properties are in",
                  "type": "string",
                  "enum": [
                    "mm",
                    "millimeter",
                    "millimetre",
                    "cm",
                    "centimeter",
                    "centimetre",
                    "m",
                    "meter",
                    "metre",
                    "ft",
                    "foot",
                    "feet",
                    "in",
                    "inch",
                    "yd",
                    "yard"
                  ]
                }
              }
            },
            "packageType": {
              "description": "Package type",
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "description": "This is the schema for representing item",
                "type": "object",
                "properties": {
                  "product": {
                    "description": "This is the schema for representing product's attributes.",
                    "type": "object",
                    "properties": {
                      "merchantProductId": {
                        "description": "The product unique identifier, provided by the merchant",
                        "type": "string",
                        "maxLength": 100
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "sku": {
                        "type": "string",
                        "description": "The sku of this product.",
                        "maxLength": 100
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of this product.",
                        "maxLength": 500
                      },
                      "category": {
                        "type": "string",
                        "description": "The category of this product."
                      },
                      "unitOfMeasure": {
                        "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                        "type": "string",
                        "enum": [
                          "Bag",
                          "Barrel",
                          "Bolt",
                          "Box",
                          "Bunch",
                          "Bundle",
                          "Butt",
                          "Canister",
                          "Carton",
                          "Case",
                          "Centimeter",
                          "Container",
                          "Crate",
                          "Cylinder",
                          "Dozen",
                          "Each",
                          "Envelope",
                          "Foot",
                          "Kilogram",
                          "Kilograms",
                          "Liter",
                          "Meter",
                          "Number",
                          "Package",
                          "Packet",
                          "Pair",
                          "Pairs",
                          "Pallet",
                          "Piece",
                          "Pieces",
                          "Pound",
                          "Proof Liter",
                          "Roll",
                          "Set",
                          "Square Meter",
                          "Square Yard",
                          "Tube",
                          "Yard"
                        ]
                      },
                      "dimensions": {
                        "description": "This is the schema for representing dimensions",
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "length",
                          "width",
                          "height",
                          "unitOfMeasurement"
                        ],
                        "properties": {
                          "length": {
                            "type": "number"
                          },
                          "width": {
                            "type": "number"
                          },
                          "height": {
                            "type": "number"
                          },
                          "unitOfMeasurement": {
                            "description": "The distance unit the dimension's properties are in",
                            "type": "string",
                            "enum": [
                              "mm",
                              "millimeter",
                              "millimetre",
                              "cm",
                              "centimeter",
                              "centimetre",
                              "m",
                              "meter",
                              "metre",
                              "ft",
                              "foot",
                              "feet",
                              "in",
                              "inch",
                              "yd",
                              "yard"
                            ]
                          }
                        }
                      },
                      "weight": {
                        "type": "object",
                        "required": [
                          "value",
                          "unitOfMeasurement"
                        ],
                        "properties": {
                          "value": {
                            "description": "The value of the weight unit",
                            "type": "number"
                          },
                          "unitOfMeasurement": {
                            "description": "The weight unit the value is",
                            "enum": [
                              "g",
                              "gram",
                              "oz",
                              "ounce",
                              "kg",
                              "kilogram",
                              "lb",
                              "pound"
                            ]
                          }
                        }
                      },
                      "monetaryValue": {
                        "description": "This is the schema for an representing money",
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "The amount of the currency",
                            "type": "number"
                          },
                          "currency": {
                            "description": "The currency the money amount is",
                            "type": "string",
                            "maxLength": 3,
                            "minLength": 3
                          }
                        }
                      },
                      "isFragile": {
                        "type": "boolean",
                        "default": false
                      },
                      "isVirtual": {
                        "type": "boolean",
                        "default": false
                      },
                      "isPrePackaged": {
                        "description": "Whether the product has its own package",
                        "type": "boolean",
                        "default": false
                      },
                      "canRotateVertical": {
                        "description": "Whether the product can be rotated vertically",
                        "type": "boolean",
                        "default": true
                      },
                      "countryOfOrigin": {
                        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "countryOfManufacture": {
                        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "classificationCodes": {
                        "type": "object",
                        "description": "Classification codes of this product for export.",
                        "properties": {
                          "eccn": {
                            "type": "string",
                            "description": "Export Control Classification Number (ECCN).",
                            "minLength": 0,
                            "maxLength": 5
                          },
                          "scheduleBinfo": {
                            "type": "string",
                            "description": "Classification code for exporting goods out of the United States.",
                            "minLength": 0,
                            "maxLength": 15
                          },
                          "hsCode": {
                            "type": "string",
                            "description": "Harmonized Commodity Description and Coding System.",
                            "minLength": 2,
                            "maxLength": 10
                          }
                        }
                      },
                      "customAttributes": {
                        "default": [],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9_-]+$"
                            },
                            "value": {
                              "type": [
                                "number",
                                "integer",
                                "string",
                                "boolean"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  },
                  "quantity": {
                    "type": "number",
                    "minimum": 1,
                    "description": "Value of unit of quantity of this item"
                  }
                }
              }
            }
          }
        }
      },
      "requiredCapabilities": {
        "description": "This is the schema for an representing capability",
        "type": "object",
        "properties": {
          "authorityToLeave": {
            "additionalProperties": false,
            "type": "boolean"
          },
          "signature": {
            "type": "object",
            "required": [
              "required"
            ],
            "additionalProperties": false,
            "properties": {
              "required": {
                "type": "boolean"
              },
              "onlyAdultCanSign": {
                "type": "boolean"
              },
              "onlyAddresseeCanSign": {
                "type": "boolean"
              }
            }
          },
          "cashOnDelivery": {
            "type": "object",
            "required": [
              "shippingInclusive"
            ],
            "properties": {
              "charge": {
                "description": "This is the schema for an representing money",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "amount",
                  "currency"
                ],
                "properties": {
                  "amount": {
                    "description": "The amount of the currency",
                    "type": "number"
                  },
                  "currency": {
                    "description": "The currency the money amount is",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                  }
                }
              },
              "shippingInclusive": {
                "description": "Identifies if the cash on delivery includes the shipping cost",
                "type": "boolean"
              }
            }
          }
        }
      },
      "exportDeclaration": {
        "description": "Type of fulfillment being chosen for a given shipment",
        "type": "object",
        "properties": {
          "signatory": {
            "description": "The signatory on a shipments' export declaration",
            "type": "object",
            "required": [
              "name",
              "title"
            ],
            "properties": {
              "name": {
                "description": "Name of signatory",
                "type": "string"
              },
              "title": {
                "description": "Title of signatory",
                "type": "string"
              }
            }
          },
          "exportReason": {
            "description": "A human readable description of the reason for the exportation",
            "type": "string"
          },
          "exportCategory": {
            "description": "A broad classification of the export reason",
            "type": "string"
          },
          "declaredValue": {
            "description": "This is the schema for an representing money",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "description": "The amount of the currency",
                "type": "number"
              },
              "currency": {
                "description": "The currency the money amount is",
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              }
            }
          },
          "incoterm": {
            "description": "Incoterm 2010 rules, series of pre-defined commercial terms.",
            "enum": [
              "EXW",
              "FCA",
              "FAS",
              "FOB",
              "CPT",
              "CFR",
              "CIF",
              "CIP",
              "DAT",
              "DAP",
              "DDP"
            ]
          },
          "customAttributes": {
            "default": [],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "value": {
                  "type": [
                    "number",
                    "integer",
                    "string",
                    "boolean"
                  ]
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "Shipment": {
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "shipment"
            ]
          },
          "attributes": {
            "$ref": "#/definitions/ShipmentAttributes"
          }
        }
      }
    }
  },
  "StoredShipment": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "shipment"
            ]
          },
          "id": {
            "description": "Id of the shipment.",
            "type": "string"
          },
          "attributes": {
            "$ref": "#/definitions/ShipmentAttributes"
          }
        }
      }
    }
  },
  "StoredShipmentCollection": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "$schema": {
        "type": "string"
      },
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "attributes",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "shipment"
              ]
            },
            "id": {
              "description": "Id of the shipment.",
              "type": "string"
            },
            "attributes": {
              "$ref": "#/definitions/ShipmentAttributes"
            }
          }
        }
      }
    }
  },
  "ShipmentQuoteResponse": {
    "description": "Describes the quotes returned by carrier services for a given shipment request.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "meta": {
        "type": "object",
        "description": "Additional information about related to data.",
        "properties": {
          "ineligibleQuotes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "integrationId",
                "carrierName",
                "reasons"
              ],
              "properties": {
                "integrationId": {
                  "description": "The unique id of the integration",
                  "type": "string"
                },
                "integrationServiceId": {
                  "description": "A consistent identifier within the integration that represents a unique carrier service",
                  "type": "string"
                },
                "serviceName": {
                  "description": "A human understandable reference that represents a carrier service",
                  "type": "string"
                },
                "carrierName": {
                  "description": "A human understandable reference that represents a carrier",
                  "type": "string"
                },
                "reasons": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1
                }
              }
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "serviceName": {
                  "description": "The name of the carrier service that encountered an error",
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "array"
                }
              }
            }
          }
        }
      },
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "quote"
              ]
            },
            "attributes": {
              "type": "object",
              "required": [
                "carrier",
                "integrationId",
                "integrationServiceId",
                "serviceName",
                "shippingTaxInclusiveCharge",
                "pricedAt"
              ],
              "properties": {
                "carrier": {
                  "description": "The unique name of the carrier",
                  "type": "string"
                },
                "integrationId": {
                  "description": "The unique id of the integration",
                  "type": "string"
                },
                "integrationServiceId": {
                  "description": "A consistent identifier within the integration that represents a unique carrier service",
                  "type": "string"
                },
                "serviceName": {
                  "description": "A human understandable reference that represents a carrier service",
                  "type": "string"
                },
                "estimatedTransitPeriod": {
                  "description": "A reference that represents the estimated travel time of the quote",
                  "type": "object",
                  "required": [
                    "minimum",
                    "maximum"
                  ],
                  "properties": {
                    "minimum": {
                      "type": "string",
                      "description": "An ISO 8601 duration representing the minimum travel time",
                      "pattern": "^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$"
                    },
                    "maximum": {
                      "type": "string",
                      "description": "An ISO 8601 duration representing the maximum travel time",
                      "pattern": "^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$"
                    }
                  }
                },
                "shippingTaxInclusiveCharge": {
                  "description": "This is the schema for an representing money",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "amount": {
                      "description": "The amount of the currency",
                      "type": "number"
                    },
                    "currency": {
                      "description": "The currency the money amount is",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    }
                  },
                  "required": [
                    "amount",
                    "currency"
                  ]
                },
                "pricedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    }
  },
  "ShipmentFulfillRequest": {
    "description": "The Shipment Fulfill Request Schema",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Type of fulfillment being chosen for a given shipment",
            "type": "string",
            "enum": [
              "carrierBooking"
            ]
          },
          "attributes": {
            "description": "The carrier booking information object",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "integrationId",
              "integrationServiceId"
            ],
            "properties": {
              "integrationId": {
                "description": "The identifier of the integration to you want to communicate with",
                "type": "string"
              },
              "integrationServiceId": {
                "description": "A consistent identifier that represents a unique carrier service",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "ShipmentFulfillResponse": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "shipment"
            ]
          },
          "id": {
            "description": "Id of the shipment.",
            "type": "string"
          },
          "attributes": {
            "description": "The Shipment Creation Request Schema",
            "type": "object",
            "required": [
              "origin",
              "destination",
              "pickupAt",
              "packages"
            ],
            "properties": {
              "pickupAt": {
                "type": "string",
                "description": "The expected pickup time",
                "format": "date-time"
              },
              "expectedAt": {
                "type": "string",
                "description": "An expected delivery date-time",
                "format": "date-time"
              },
              "customerReference": {
                "description": "A consistent identifier that represents a clients customer",
                "type": "string"
              },
              "origin": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "description": "Merchant location name.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of location.",
                    "enum": [
                      "Store",
                      "Warehouse",
                      "Drop Shipper",
                      "Collection Point",
                      "Click & Collect",
                      "Headquarters"
                    ]
                  },
                  "address": {
                    "description": "This is the schema for representing an address",
                    "type": "object",
                    "required": [
                      "countryCode"
                    ],
                    "properties": {
                      "isOrganisation": {
                        "description": "Does this address belong to an organisation?",
                        "type": "boolean"
                      },
                      "line": {
                        "description": "Lines of the address",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "countryCode": {
                        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "The post or zip code of this address."
                      },
                      "locality": {
                        "type": "string",
                        "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                      },
                      "dependentLocality": {
                        "type": "string",
                        "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                      },
                      "administrativeArea": {
                        "type": "string",
                        "description": "The administrative area of this address, ie. state."
                      },
                      "longitude": {
                        "type": "number",
                        "description": "The longitude value of a geocoded address."
                      },
                      "latitude": {
                        "type": "number",
                        "description": "The latitude value of a geocoded address."
                      }
                    }
                  },
                  "contact": {
                    "description": "This is the schema for representing entity",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "organisationName": {
                        "type": "string",
                        "description": "Organisation name of this entity."
                      },
                      "personFirstName": {
                        "type": "string",
                        "description": "First name of this entity."
                      },
                      "personLastName": {
                        "type": "string",
                        "description": "Last name of this entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of this entity.",
                        "format": "email"
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "description": "List of phone number(s) of this entity",
                        "items": {
                          "type": "string"
                        }
                      },
                      "faxNumber": {
                        "type": "string"
                      },
                      "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National identification number of this entity, ie. INSEE code (France)"
                      },
                      "taxIdentificationNumber": {
                        "type": "string",
                        "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                      }
                    }
                  },
                  "customAttributes": {
                    "default": [],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": [
                            "number",
                            "integer",
                            "string",
                            "boolean"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              },
              "destination": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "description": "Merchant location name.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of location.",
                    "enum": [
                      "Store",
                      "Warehouse",
                      "Drop Shipper",
                      "Collection Point",
                      "Click & Collect",
                      "Headquarters"
                    ]
                  },
                  "address": {
                    "description": "This is the schema for representing an address",
                    "type": "object",
                    "required": [
                      "countryCode"
                    ],
                    "properties": {
                      "isOrganisation": {
                        "description": "Does this address belong to an organisation?",
                        "type": "boolean"
                      },
                      "line": {
                        "description": "Lines of the address",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "countryCode": {
                        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "The post or zip code of this address."
                      },
                      "locality": {
                        "type": "string",
                        "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                      },
                      "dependentLocality": {
                        "type": "string",
                        "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                      },
                      "administrativeArea": {
                        "type": "string",
                        "description": "The administrative area of this address, ie. state."
                      },
                      "longitude": {
                        "type": "number",
                        "description": "The longitude value of a geocoded address."
                      },
                      "latitude": {
                        "type": "number",
                        "description": "The latitude value of a geocoded address."
                      }
                    }
                  },
                  "contact": {
                    "description": "This is the schema for representing entity",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "organisationName": {
                        "type": "string",
                        "description": "Organisation name of this entity."
                      },
                      "personFirstName": {
                        "type": "string",
                        "description": "First name of this entity."
                      },
                      "personLastName": {
                        "type": "string",
                        "description": "Last name of this entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of this entity.",
                        "format": "email"
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "description": "List of phone number(s) of this entity",
                        "items": {
                          "type": "string"
                        }
                      },
                      "faxNumber": {
                        "type": "string"
                      },
                      "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National identification number of this entity, ie. INSEE code (France)"
                      },
                      "taxIdentificationNumber": {
                        "type": "string",
                        "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                      }
                    }
                  },
                  "customAttributes": {
                    "default": [],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": [
                            "number",
                            "integer",
                            "string",
                            "boolean"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              },
              "packages": {
                "type": "array",
                "items": {
                  "description": "This is the schema for representing packages",
                  "type": "object",
                  "required": [
                    "id",
                    "grossWeight",
                    "dimensions"
                  ],
                  "properties": {
                    "id": {
                      "description": "id of the package.",
                      "type": "string"
                    },
                    "grossWeight": {
                      "type": "object",
                      "required": [
                        "value",
                        "unitOfMeasurement"
                      ],
                      "properties": {
                        "value": {
                          "description": "The value of the weight unit",
                          "type": "number"
                        },
                        "unitOfMeasurement": {
                          "description": "The weight unit the value is",
                          "enum": [
                            "g",
                            "gram",
                            "oz",
                            "ounce",
                            "kg",
                            "kilogram",
                            "lb",
                            "pound"
                          ]
                        }
                      }
                    },
                    "dimensions": {
                      "description": "This is the schema for representing dimensions",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "length",
                        "width",
                        "height",
                        "unitOfMeasurement"
                      ],
                      "properties": {
                        "length": {
                          "type": "number"
                        },
                        "width": {
                          "type": "number"
                        },
                        "height": {
                          "type": "number"
                        },
                        "unitOfMeasurement": {
                          "description": "The distance unit the dimension's properties are in",
                          "type": "string",
                          "enum": [
                            "mm",
                            "millimeter",
                            "millimetre",
                            "cm",
                            "centimeter",
                            "centimetre",
                            "m",
                            "meter",
                            "metre",
                            "ft",
                            "foot",
                            "feet",
                            "in",
                            "inch",
                            "yd",
                            "yard"
                          ]
                        }
                      }
                    },
                    "packageType": {
                      "description": "Package type",
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "description": "This is the schema for representing item",
                        "type": "object",
                        "properties": {
                          "product": {
                            "description": "This is the schema for representing product's attributes.",
                            "type": "object",
                            "properties": {
                              "merchantProductId": {
                                "description": "The product unique identifier, provided by the merchant",
                                "type": "string",
                                "maxLength": 100
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 100
                              },
                              "sku": {
                                "type": "string",
                                "description": "The sku of this product.",
                                "maxLength": 100
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of this product.",
                                "maxLength": 500
                              },
                              "category": {
                                "type": "string",
                                "description": "The category of this product."
                              },
                              "unitOfMeasure": {
                                "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                                "type": "string",
                                "enum": [
                                  "Bag",
                                  "Barrel",
                                  "Bolt",
                                  "Box",
                                  "Bunch",
                                  "Bundle",
                                  "Butt",
                                  "Canister",
                                  "Carton",
                                  "Case",
                                  "Centimeter",
                                  "Container",
                                  "Crate",
                                  "Cylinder",
                                  "Dozen",
                                  "Each",
                                  "Envelope",
                                  "Foot",
                                  "Kilogram",
                                  "Kilograms",
                                  "Liter",
                                  "Meter",
                                  "Number",
                                  "Package",
                                  "Packet",
                                  "Pair",
                                  "Pairs",
                                  "Pallet",
                                  "Piece",
                                  "Pieces",
                                  "Pound",
                                  "Proof Liter",
                                  "Roll",
                                  "Set",
                                  "Square Meter",
                                  "Square Yard",
                                  "Tube",
                                  "Yard"
                                ]
                              },
                              "dimensions": {
                                "description": "This is the schema for representing dimensions",
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "length",
                                  "width",
                                  "height",
                                  "unitOfMeasurement"
                                ],
                                "properties": {
                                  "length": {
                                    "type": "number"
                                  },
                                  "width": {
                                    "type": "number"
                                  },
                                  "height": {
                                    "type": "number"
                                  },
                                  "unitOfMeasurement": {
                                    "description": "The distance unit the dimension's properties are in",
                                    "type": "string",
                                    "enum": [
                                      "mm",
                                      "millimeter",
                                      "millimetre",
                                      "cm",
                                      "centimeter",
                                      "centimetre",
                                      "m",
                                      "meter",
                                      "metre",
                                      "ft",
                                      "foot",
                                      "feet",
                                      "in",
                                      "inch",
                                      "yd",
                                      "yard"
                                    ]
                                  }
                                }
                              },
                              "weight": {
                                "type": "object",
                                "required": [
                                  "value",
                                  "unitOfMeasurement"
                                ],
                                "properties": {
                                  "value": {
                                    "description": "The value of the weight unit",
                                    "type": "number"
                                  },
                                  "unitOfMeasurement": {
                                    "description": "The weight unit the value is",
                                    "enum": [
                                      "g",
                                      "gram",
                                      "oz",
                                      "ounce",
                                      "kg",
                                      "kilogram",
                                      "lb",
                                      "pound"
                                    ]
                                  }
                                }
                              },
                              "monetaryValue": {
                                "description": "This is the schema for an representing money",
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "amount",
                                  "currency"
                                ],
                                "properties": {
                                  "amount": {
                                    "description": "The amount of the currency",
                                    "type": "number"
                                  },
                                  "currency": {
                                    "description": "The currency the money amount is",
                                    "type": "string",
                                    "maxLength": 3,
                                    "minLength": 3
                                  }
                                }
                              },
                              "isFragile": {
                                "type": "boolean",
                                "default": false
                              },
                              "isVirtual": {
                                "type": "boolean",
                                "default": false
                              },
                              "isPrePackaged": {
                                "description": "Whether the product has its own package",
                                "type": "boolean",
                                "default": false
                              },
                              "canRotateVertical": {
                                "description": "Whether the product can be rotated vertically",
                                "type": "boolean",
                                "default": true
                              },
                              "countryOfOrigin": {
                                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2
                              },
                              "countryOfManufacture": {
                                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2
                              },
                              "classificationCodes": {
                                "type": "object",
                                "description": "Classification codes of this product for export.",
                                "properties": {
                                  "eccn": {
                                    "type": "string",
                                    "description": "Export Control Classification Number (ECCN).",
                                    "minLength": 0,
                                    "maxLength": 5
                                  },
                                  "scheduleBinfo": {
                                    "type": "string",
                                    "description": "Classification code for exporting goods out of the United States.",
                                    "minLength": 0,
                                    "maxLength": 15
                                  },
                                  "hsCode": {
                                    "type": "string",
                                    "description": "Harmonized Commodity Description and Coding System.",
                                    "minLength": 2,
                                    "maxLength": 10
                                  }
                                }
                              },
                              "customAttributes": {
                                "default": [],
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "value"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z0-9_-]+$"
                                    },
                                    "value": {
                                      "type": [
                                        "number",
                                        "integer",
                                        "string",
                                        "boolean"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            }
                          },
                          "quantity": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Value of unit of quantity of this item"
                          }
                        }
                      }
                    },
                    "documentation": {
                      "type": "array",
                      "items": {
                        "description": "A generic document response.",
                        "type": "object",
                        "required": [
                          "encoding",
                          "mimeType",
                          "type"
                        ],
                        "properties": {
                          "description": {
                            "description": "Short description of the document.",
                            "type": "string"
                          },
                          "mimeType": {
                            "description": "A standard mime-type representation of the file format.",
                            "type": "string",
                            "enum": [
                              "application/epl",
                              "application/epl2",
                              "application/zpl",
                              "application/pdf",
                              "image/png",
                              "image/jpg",
                              "image/gif",
                              "image/bmp"
                            ]
                          },
                          "encoding": {
                            "description": "The encoding of the data",
                            "type": "string",
                            "enum": [
                              "base64",
                              "plainText"
                            ]
                          },
                          "size": {
                            "description": "A standard ISO 216 paper size - https://en.wikipedia.org/wiki/ISO_216",
                            "type": "string",
                            "enum": [
                              "A0",
                              "A1",
                              "A2",
                              "A3",
                              "A4",
                              "A5",
                              "A6",
                              "A7",
                              "A8",
                              "A9",
                              "A10"
                            ]
                          },
                          "type": {
                            "description": "The document type being generated",
                            "type": "string",
                            "enum": [
                              "manifestSummary",
                              "customerInvoice",
                              "cn22",
                              "cn23",
                              "packagingList",
                              "packageLabels",
                              "certificateOfOrigin",
                              "NAFTA",
                              "commercialInvoice",
                              "CODTurnInPage",
                              "proofOfDelivery"
                            ]
                          },
                          "url": {
                            "description": "The URL of a document stored on a remote HTTP server",
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "requiredCapabilities": {
                "description": "This is the schema for an representing capability",
                "type": "object",
                "properties": {
                  "authorityToLeave": {
                    "additionalProperties": false,
                    "type": "boolean"
                  },
                  "signature": {
                    "type": "object",
                    "required": [
                      "required"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "required": {
                        "type": "boolean"
                      },
                      "onlyAdultCanSign": {
                        "type": "boolean"
                      },
                      "onlyAddresseeCanSign": {
                        "type": "boolean"
                      }
                    }
                  },
                  "cashOnDelivery": {
                    "type": "object",
                    "required": [
                      "shippingInclusive"
                    ],
                    "properties": {
                      "charge": {
                        "description": "This is the schema for an representing money",
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "The amount of the currency",
                            "type": "number"
                          },
                          "currency": {
                            "description": "The currency the money amount is",
                            "type": "string",
                            "maxLength": 3,
                            "minLength": 3
                          }
                        }
                      },
                      "shippingInclusive": {
                        "description": "Identifies if the cash on delivery includes the shipping cost",
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "exportDeclaration": {
                "description": "Type of fulfillment being chosen for a given shipment",
                "type": "object",
                "properties": {
                  "signatory": {
                    "description": "The signatory on a shipments' export declaration",
                    "type": "object",
                    "required": [
                      "name",
                      "title"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of signatory",
                        "type": "string"
                      },
                      "title": {
                        "description": "Title of signatory",
                        "type": "string"
                      }
                    }
                  },
                  "exportReason": {
                    "description": "A human readable description of the reason for the exportation",
                    "type": "string"
                  },
                  "exportCategory": {
                    "description": "A broad classification of the export reason",
                    "type": "string"
                  },
                  "declaredValue": {
                    "description": "This is the schema for an representing money",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The amount of the currency",
                        "type": "number"
                      },
                      "currency": {
                        "description": "The currency the money amount is",
                        "type": "string",
                        "maxLength": 3,
                        "minLength": 3
                      }
                    }
                  },
                  "incoterm": {
                    "description": "Incoterm 2010 rules, series of pre-defined commercial terms.",
                    "enum": [
                      "EXW",
                      "FCA",
                      "FAS",
                      "FOB",
                      "CPT",
                      "CFR",
                      "CIF",
                      "CIP",
                      "DAT",
                      "DAP",
                      "DDP"
                    ]
                  },
                  "customAttributes": {
                    "default": [],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": [
                            "number",
                            "integer",
                            "string",
                            "boolean"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              },
              "documentation": {
                "type": "array",
                "items": {
                  "description": "A generic document response.",
                  "type": "object",
                  "required": [
                    "encoding",
                    "mimeType",
                    "type"
                  ],
                  "properties": {
                    "description": {
                      "description": "Short description of the document.",
                      "type": "string"
                    },
                    "mimeType": {
                      "description": "A standard mime-type representation of the file format.",
                      "type": "string",
                      "enum": [
                        "application/epl",
                        "application/epl2",
                        "application/zpl",
                        "application/pdf",
                        "image/png",
                        "image/jpg",
                        "image/gif",
                        "image/bmp"
                      ]
                    },
                    "encoding": {
                      "description": "The encoding of the data",
                      "type": "string",
                      "enum": [
                        "base64",
                        "plainText"
                      ]
                    },
                    "size": {
                      "description": "A standard ISO 216 paper size - https://en.wikipedia.org/wiki/ISO_216",
                      "type": "string",
                      "enum": [
                        "A0",
                        "A1",
                        "A2",
                        "A3",
                        "A4",
                        "A5",
                        "A6",
                        "A7",
                        "A8",
                        "A9",
                        "A10"
                      ]
                    },
                    "type": {
                      "description": "The document type being generated",
                      "type": "string",
                      "enum": [
                        "manifestSummary",
                        "customerInvoice",
                        "cn22",
                        "cn23",
                        "packagingList",
                        "packageLabels",
                        "certificateOfOrigin",
                        "NAFTA",
                        "commercialInvoice",
                        "CODTurnInPage",
                        "proofOfDelivery"
                      ]
                    },
                    "url": {
                      "description": "The URL of a document stored on a remote HTTP server",
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              },
              "fulfill": {
                "type": "object",
                "properties": {
                  "carrierBooking": {
                    "description": "The carrier booking information object",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "integrationId",
                      "integrationServiceId",
                      "shippingTaxInclusiveCharge",
                      "carrierName",
                      "serviceName",
                      "bookingReference",
                      "trackingReference"
                    ],
                    "properties": {
                      "integrationId": {
                        "description": "The identifier of the integration to you want to communicate with",
                        "type": "string"
                      },
                      "integrationServiceId": {
                        "description": "A consistent identifier that represents a unique carrier service",
                        "type": "string"
                      },
                      "shippingTaxInclusiveCharge": {
                        "description": "This is the schema for an representing money",
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "The amount of the currency",
                            "type": "number"
                          },
                          "currency": {
                            "description": "The currency the money amount is",
                            "type": "string",
                            "maxLength": 3,
                            "minLength": 3
                          }
                        }
                      },
                      "carrierName": {
                        "description": "A human understandable reference that represents a carrier",
                        "type": "string"
                      },
                      "serviceName": {
                        "description": "A human understandable reference that represents a carrier service",
                        "type": "string"
                      },
                      "carrierSortCode": {
                        "description": "An identifier used by a carrier to determinine shipment sorting",
                        "type": "string"
                      },
                      "bookingReference": {
                        "type": "string"
                      },
                      "trackingReference": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "Order": {
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "$schema": {
        "type": "string"
      },
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "order"
            ]
          },
          "attributes": {
            "description": "Schema to represent order",
            "type": "object",
            "required": [
              "createdAt",
              "orderedAt",
              "customer",
              "deliverTo",
              "items"
            ],
            "properties": {
              "createdAt": {
                "description": "The date and time this order was first created, represented as defined by RFC 3339, Section 5.6",
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "description": "The date and time this order was last modified, represented as defined by RFC 3339, Section 5.6",
                "type": "string",
                "format": "date-time"
              },
              "orderedAt": {
                "description": "The date and time the order was placed, represented as defined by RFC 3339, Section 5.6",
                "type": "string",
                "format": "date-time"
              },
              "source": {
                "type": "object",
                "required": [
                  "name",
                  "reference"
                ],
                "properties": {
                  "name": {
                    "description": "Order source, ie Magento, Shopify",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Order reference from a shopping cart, ie. Magento order no.",
                    "type": "string"
                  }
                }
              },
              "customer": {
                "type": "object",
                "required": [
                  "contact"
                ],
                "properties": {
                  "contact": {
                    "description": "This is the schema for representing entity",
                    "type": "object",
                    "properties": {
                      "organisationName": {
                        "type": "string",
                        "description": "Organisation name of this entity."
                      },
                      "personFirstName": {
                        "type": "string",
                        "description": "First name of this entity."
                      },
                      "personLastName": {
                        "type": "string",
                        "description": "Last name of this entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of this entity.",
                        "format": "email"
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "description": "List of phone number(s) of this entity",
                        "items": {
                          "type": "string"
                        }
                      },
                      "faxNumber": {
                        "type": "string"
                      },
                      "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National identification number of this entity, ie. INSEE code (France)"
                      },
                      "taxIdentificationNumber": {
                        "type": "string",
                        "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                      }
                    }
                  }
                }
              },
              "deliverTo": {
                "type": "object",
                "properties": {
                  "address": {
                    "description": "This is the schema for representing an address",
                    "type": "object",
                    "required": [
                      "countryCode"
                    ],
                    "properties": {
                      "isOrganisation": {
                        "description": "Does this address belong to an organisation?",
                        "type": "boolean"
                      },
                      "line": {
                        "description": "Lines of the address",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "countryCode": {
                        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "The post or zip code of this address."
                      },
                      "locality": {
                        "type": "string",
                        "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                      },
                      "dependentLocality": {
                        "type": "string",
                        "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                      },
                      "administrativeArea": {
                        "type": "string",
                        "description": "The administrative area of this address, ie. state."
                      },
                      "longitude": {
                        "type": "number",
                        "description": "The longitude value of a geocoded address."
                      },
                      "latitude": {
                        "type": "number",
                        "description": "The latitude value of a geocoded address."
                      }
                    }
                  },
                  "contact": {
                    "description": "This is the schema for representing entity",
                    "type": "object",
                    "properties": {
                      "organisationName": {
                        "type": "string",
                        "description": "Organisation name of this entity."
                      },
                      "personFirstName": {
                        "type": "string",
                        "description": "First name of this entity."
                      },
                      "personLastName": {
                        "type": "string",
                        "description": "Last name of this entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of this entity.",
                        "format": "email"
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "description": "List of phone number(s) of this entity",
                        "items": {
                          "type": "string"
                        }
                      },
                      "faxNumber": {
                        "type": "string"
                      },
                      "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National identification number of this entity, ie. INSEE code (France)"
                      },
                      "taxIdentificationNumber": {
                        "type": "string",
                        "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                      }
                    }
                  },
                  "options": {
                    "description": "The contact assigned to the location",
                    "type": "object"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "description": "This is the schema for representing item",
                  "type": "object",
                  "properties": {
                    "product": {
                      "description": "This is the schema for representing product's attributes.",
                      "type": "object",
                      "properties": {
                        "merchantProductId": {
                          "description": "The product unique identifier, provided by the merchant",
                          "type": "string",
                          "maxLength": 100
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 100
                        },
                        "sku": {
                          "type": "string",
                          "description": "The sku of this product.",
                          "maxLength": 100
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of this product.",
                          "maxLength": 500
                        },
                        "category": {
                          "type": "string",
                          "description": "The category of this product."
                        },
                        "unitOfMeasure": {
                          "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                          "type": "string",
                          "enum": [
                            "Bag",
                            "Barrel",
                            "Bolt",
                            "Box",
                            "Bunch",
                            "Bundle",
                            "Butt",
                            "Canister",
                            "Carton",
                            "Case",
                            "Centimeter",
                            "Container",
                            "Crate",
                            "Cylinder",
                            "Dozen",
                            "Each",
                            "Envelope",
                            "Foot",
                            "Kilogram",
                            "Kilograms",
                            "Liter",
                            "Meter",
                            "Number",
                            "Package",
                            "Packet",
                            "Pair",
                            "Pairs",
                            "Pallet",
                            "Piece",
                            "Pieces",
                            "Pound",
                            "Proof Liter",
                            "Roll",
                            "Set",
                            "Square Meter",
                            "Square Yard",
                            "Tube",
                            "Yard"
                          ]
                        },
                        "dimensions": {
                          "description": "This is the schema for representing dimensions",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "length",
                            "width",
                            "height",
                            "unitOfMeasurement"
                          ],
                          "properties": {
                            "length": {
                              "type": "number"
                            },
                            "width": {
                              "type": "number"
                            },
                            "height": {
                              "type": "number"
                            },
                            "unitOfMeasurement": {
                              "description": "The distance unit the dimension's properties are in",
                              "type": "string",
                              "enum": [
                                "mm",
                                "millimeter",
                                "millimetre",
                                "cm",
                                "centimeter",
                                "centimetre",
                                "m",
                                "meter",
                                "metre",
                                "ft",
                                "foot",
                                "feet",
                                "in",
                                "inch",
                                "yd",
                                "yard"
                              ]
                            }
                          }
                        },
                        "weight": {
                          "type": "object",
                          "required": [
                            "value",
                            "unitOfMeasurement"
                          ],
                          "properties": {
                            "value": {
                              "description": "The value of the weight unit",
                              "type": "number"
                            },
                            "unitOfMeasurement": {
                              "description": "The weight unit the value is",
                              "enum": [
                                "g",
                                "gram",
                                "oz",
                                "ounce",
                                "kg",
                                "kilogram",
                                "lb",
                                "pound"
                              ]
                            }
                          }
                        },
                        "monetaryValue": {
                          "description": "This is the schema for an representing money",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "description": "The amount of the currency",
                              "type": "number"
                            },
                            "currency": {
                              "description": "The currency the money amount is",
                              "type": "string",
                              "maxLength": 3,
                              "minLength": 3
                            }
                          }
                        },
                        "isFragile": {
                          "type": "boolean",
                          "default": false
                        },
                        "isVirtual": {
                          "type": "boolean",
                          "default": false
                        },
                        "isPrePackaged": {
                          "description": "Whether the product has its own package",
                          "type": "boolean",
                          "default": false
                        },
                        "canRotateVertical": {
                          "description": "Whether the product can be rotated vertically",
                          "type": "boolean",
                          "default": true
                        },
                        "countryOfOrigin": {
                          "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2
                        },
                        "countryOfManufacture": {
                          "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2
                        },
                        "classificationCodes": {
                          "type": "object",
                          "description": "Classification codes of this product for export.",
                          "properties": {
                            "eccn": {
                              "type": "string",
                              "description": "Export Control Classification Number (ECCN).",
                              "minLength": 0,
                              "maxLength": 5
                            },
                            "scheduleBinfo": {
                              "type": "string",
                              "description": "Classification code for exporting goods out of the United States.",
                              "minLength": 0,
                              "maxLength": 15
                            },
                            "hsCode": {
                              "type": "string",
                              "description": "Harmonized Commodity Description and Coding System.",
                              "minLength": 2,
                              "maxLength": 10
                            }
                          }
                        },
                        "customAttributes": {
                          "default": [],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": [
                                  "number",
                                  "integer",
                                  "string",
                                  "boolean"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number",
                      "minimum": 1,
                      "description": "Value of unit of measure of this item."
                    }
                  }
                }
              },
              "total": {
                "description": "This is the schema for an representing money",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "amount",
                  "currency"
                ],
                "properties": {
                  "amount": {
                    "description": "The amount of the currency",
                    "type": "number"
                  },
                  "currency": {
                    "description": "The currency the money amount is",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "StoredOrderSingle": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "order"
            ]
          },
          "id": {
            "description": "GUID of the order.",
            "type": "string"
          },
          "attributes": {
            "description": "Schema to represent order",
            "type": "object",
            "required": [
              "createdAt",
              "orderedAt",
              "customer",
              "deliverTo",
              "items"
            ],
            "properties": {
              "createdAt": {
                "description": "The date and time this order was first created, represented as defined by RFC 3339, Section 5.6",
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "description": "The date and time this order was last modified, represented as defined by RFC 3339, Section 5.6",
                "type": "string",
                "format": "date-time"
              },
              "orderedAt": {
                "description": "The date and time the order was placed, represented as defined by RFC 3339, Section 5.6",
                "type": "string",
                "format": "date-time"
              },
              "source": {
                "type": "object",
                "required": [
                  "name",
                  "reference"
                ],
                "properties": {
                  "name": {
                    "description": "Order source, ie Magento, Shopify",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Order reference from a shopping cart, ie. Magento order no.",
                    "type": "string"
                  }
                }
              },
              "customer": {
                "type": "object",
                "required": [
                  "contact"
                ],
                "properties": {
                  "contact": {
                    "description": "This is the schema for representing entity",
                    "type": "object",
                    "properties": {
                      "organisationName": {
                        "type": "string",
                        "description": "Organisation name of this entity."
                      },
                      "personFirstName": {
                        "type": "string",
                        "description": "First name of this entity."
                      },
                      "personLastName": {
                        "type": "string",
                        "description": "Last name of this entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of this entity.",
                        "format": "email"
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "description": "List of phone number(s) of this entity",
                        "items": {
                          "type": "string"
                        }
                      },
                      "faxNumber": {
                        "type": "string"
                      },
                      "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National identification number of this entity, ie. INSEE code (France)"
                      },
                      "taxIdentificationNumber": {
                        "type": "string",
                        "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                      }
                    }
                  }
                }
              },
              "deliverTo": {
                "type": "object",
                "properties": {
                  "address": {
                    "description": "This is the schema for representing an address",
                    "type": "object",
                    "required": [
                      "countryCode"
                    ],
                    "properties": {
                      "isOrganisation": {
                        "description": "Does this address belong to an organisation?",
                        "type": "boolean"
                      },
                      "line": {
                        "description": "Lines of the address",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "countryCode": {
                        "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "The post or zip code of this address."
                      },
                      "locality": {
                        "type": "string",
                        "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                      },
                      "dependentLocality": {
                        "type": "string",
                        "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                      },
                      "administrativeArea": {
                        "type": "string",
                        "description": "The administrative area of this address, ie. state."
                      },
                      "longitude": {
                        "type": "number",
                        "description": "The longitude value of a geocoded address."
                      },
                      "latitude": {
                        "type": "number",
                        "description": "The latitude value of a geocoded address."
                      }
                    }
                  },
                  "contact": {
                    "description": "This is the schema for representing entity",
                    "type": "object",
                    "properties": {
                      "organisationName": {
                        "type": "string",
                        "description": "Organisation name of this entity."
                      },
                      "personFirstName": {
                        "type": "string",
                        "description": "First name of this entity."
                      },
                      "personLastName": {
                        "type": "string",
                        "description": "Last name of this entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of this entity.",
                        "format": "email"
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "description": "List of phone number(s) of this entity",
                        "items": {
                          "type": "string"
                        }
                      },
                      "faxNumber": {
                        "type": "string"
                      },
                      "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National identification number of this entity, ie. INSEE code (France)"
                      },
                      "taxIdentificationNumber": {
                        "type": "string",
                        "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                      }
                    }
                  },
                  "options": {
                    "description": "The contact assigned to the location",
                    "type": "object"
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "description": "This is the schema for representing item",
                  "type": "object",
                  "properties": {
                    "product": {
                      "description": "This is the schema for representing product's attributes.",
                      "type": "object",
                      "properties": {
                        "merchantProductId": {
                          "description": "The product unique identifier, provided by the merchant",
                          "type": "string",
                          "maxLength": 100
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 100
                        },
                        "sku": {
                          "type": "string",
                          "description": "The sku of this product.",
                          "maxLength": 100
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of this product.",
                          "maxLength": 500
                        },
                        "category": {
                          "type": "string",
                          "description": "The category of this product."
                        },
                        "unitOfMeasure": {
                          "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                          "type": "string",
                          "enum": [
                            "Bag",
                            "Barrel",
                            "Bolt",
                            "Box",
                            "Bunch",
                            "Bundle",
                            "Butt",
                            "Canister",
                            "Carton",
                            "Case",
                            "Centimeter",
                            "Container",
                            "Crate",
                            "Cylinder",
                            "Dozen",
                            "Each",
                            "Envelope",
                            "Foot",
                            "Kilogram",
                            "Kilograms",
                            "Liter",
                            "Meter",
                            "Number",
                            "Package",
                            "Packet",
                            "Pair",
                            "Pairs",
                            "Pallet",
                            "Piece",
                            "Pieces",
                            "Pound",
                            "Proof Liter",
                            "Roll",
                            "Set",
                            "Square Meter",
                            "Square Yard",
                            "Tube",
                            "Yard"
                          ]
                        },
                        "dimensions": {
                          "description": "This is the schema for representing dimensions",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "length",
                            "width",
                            "height",
                            "unitOfMeasurement"
                          ],
                          "properties": {
                            "length": {
                              "type": "number"
                            },
                            "width": {
                              "type": "number"
                            },
                            "height": {
                              "type": "number"
                            },
                            "unitOfMeasurement": {
                              "description": "The distance unit the dimension's properties are in",
                              "type": "string",
                              "enum": [
                                "mm",
                                "millimeter",
                                "millimetre",
                                "cm",
                                "centimeter",
                                "centimetre",
                                "m",
                                "meter",
                                "metre",
                                "ft",
                                "foot",
                                "feet",
                                "in",
                                "inch",
                                "yd",
                                "yard"
                              ]
                            }
                          }
                        },
                        "weight": {
                          "type": "object",
                          "required": [
                            "value",
                            "unitOfMeasurement"
                          ],
                          "properties": {
                            "value": {
                              "description": "The value of the weight unit",
                              "type": "number"
                            },
                            "unitOfMeasurement": {
                              "description": "The weight unit the value is",
                              "enum": [
                                "g",
                                "gram",
                                "oz",
                                "ounce",
                                "kg",
                                "kilogram",
                                "lb",
                                "pound"
                              ]
                            }
                          }
                        },
                        "monetaryValue": {
                          "description": "This is the schema for an representing money",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "description": "The amount of the currency",
                              "type": "number"
                            },
                            "currency": {
                              "description": "The currency the money amount is",
                              "type": "string",
                              "maxLength": 3,
                              "minLength": 3
                            }
                          }
                        },
                        "isFragile": {
                          "type": "boolean",
                          "default": false
                        },
                        "isVirtual": {
                          "type": "boolean",
                          "default": false
                        },
                        "isPrePackaged": {
                          "description": "Whether the product has its own package",
                          "type": "boolean",
                          "default": false
                        },
                        "canRotateVertical": {
                          "description": "Whether the product can be rotated vertically",
                          "type": "boolean",
                          "default": true
                        },
                        "countryOfOrigin": {
                          "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2
                        },
                        "countryOfManufacture": {
                          "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2
                        },
                        "classificationCodes": {
                          "type": "object",
                          "description": "Classification codes of this product for export.",
                          "properties": {
                            "eccn": {
                              "type": "string",
                              "description": "Export Control Classification Number (ECCN).",
                              "minLength": 0,
                              "maxLength": 5
                            },
                            "scheduleBinfo": {
                              "type": "string",
                              "description": "Classification code for exporting goods out of the United States.",
                              "minLength": 0,
                              "maxLength": 15
                            },
                            "hsCode": {
                              "type": "string",
                              "description": "Harmonized Commodity Description and Coding System.",
                              "minLength": 2,
                              "maxLength": 10
                            }
                          }
                        },
                        "customAttributes": {
                          "default": [],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": [
                                  "number",
                                  "integer",
                                  "string",
                                  "boolean"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number",
                      "minimum": 1,
                      "description": "Value of unit of measure of this item."
                    }
                  }
                }
              },
              "total": {
                "description": "This is the schema for an representing money",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "amount",
                  "currency"
                ],
                "properties": {
                  "amount": {
                    "description": "The amount of the currency",
                    "type": "number"
                  },
                  "currency": {
                    "description": "The currency the money amount is",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "StoredOrderCollection": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "$schema": {
        "type": "string"
      },
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "attributes",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "order"
              ]
            },
            "id": {
              "description": "GUID of the order.",
              "type": "string"
            },
            "attributes": {
              "description": "Schema to represent order",
              "type": "object",
              "required": [
                "createdAt",
                "orderedAt",
                "customer",
                "deliverTo",
                "items"
              ],
              "properties": {
                "createdAt": {
                  "description": "The date and time this order was first created, represented as defined by RFC 3339, Section 5.6",
                  "type": "string",
                  "format": "date-time"
                },
                "lastModifiedAt": {
                  "description": "The date and time this order was last modified, represented as defined by RFC 3339, Section 5.6",
                  "type": "string",
                  "format": "date-time"
                },
                "orderedAt": {
                  "description": "The date and time the order was placed, represented as defined by RFC 3339, Section 5.6",
                  "type": "string",
                  "format": "date-time"
                },
                "source": {
                  "type": "object",
                  "required": [
                    "name",
                    "reference"
                  ],
                  "properties": {
                    "name": {
                      "description": "Order source, ie Magento, Shopify",
                      "type": "string"
                    },
                    "reference": {
                      "description": "Order reference from a shopping cart, ie. Magento order no.",
                      "type": "string"
                    }
                  }
                },
                "customer": {
                  "type": "object",
                  "required": [
                    "contact"
                  ],
                  "properties": {
                    "contact": {
                      "description": "This is the schema for representing entity",
                      "type": "object",
                      "properties": {
                        "organisationName": {
                          "type": "string",
                          "description": "Organisation name of this entity."
                        },
                        "personFirstName": {
                          "type": "string",
                          "description": "First name of this entity."
                        },
                        "personLastName": {
                          "type": "string",
                          "description": "Last name of this entity."
                        },
                        "email": {
                          "type": "string",
                          "description": "Email of this entity.",
                          "format": "email"
                        },
                        "phoneNumbers": {
                          "type": "array",
                          "description": "List of phone number(s) of this entity",
                          "items": {
                            "type": "string"
                          }
                        },
                        "faxNumber": {
                          "type": "string"
                        },
                        "nationalIdentificationNumber": {
                          "type": "string",
                          "description": "National identification number of this entity, ie. INSEE code (France)"
                        },
                        "taxIdentificationNumber": {
                          "type": "string",
                          "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                        }
                      }
                    }
                  }
                },
                "deliverTo": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "This is the schema for representing an address",
                      "type": "object",
                      "required": [
                        "countryCode"
                      ],
                      "properties": {
                        "isOrganisation": {
                          "description": "Does this address belong to an organisation?",
                          "type": "boolean"
                        },
                        "line": {
                          "description": "Lines of the address",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "countryCode": {
                          "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "The post or zip code of this address."
                        },
                        "locality": {
                          "type": "string",
                          "description": "The locality (i.e city, township) of this address. Some countries do not use this field; their address lines are sufficient to locate an address within a sub-administrative area."
                        },
                        "dependentLocality": {
                          "type": "string",
                          "description": "The dependent locality (i.e neighbourhood) of this address. When representing a double-dependent locality in Great Britain, includes both the double-dependent locality and the dependent locality,"
                        },
                        "administrativeArea": {
                          "type": "string",
                          "description": "The administrative area of this address, ie. state."
                        },
                        "longitude": {
                          "type": "number",
                          "description": "The longitude value of a geocoded address."
                        },
                        "latitude": {
                          "type": "number",
                          "description": "The latitude value of a geocoded address."
                        }
                      }
                    },
                    "contact": {
                      "description": "This is the schema for representing entity",
                      "type": "object",
                      "properties": {
                        "organisationName": {
                          "type": "string",
                          "description": "Organisation name of this entity."
                        },
                        "personFirstName": {
                          "type": "string",
                          "description": "First name of this entity."
                        },
                        "personLastName": {
                          "type": "string",
                          "description": "Last name of this entity."
                        },
                        "email": {
                          "type": "string",
                          "description": "Email of this entity.",
                          "format": "email"
                        },
                        "phoneNumbers": {
                          "type": "array",
                          "description": "List of phone number(s) of this entity",
                          "items": {
                            "type": "string"
                          }
                        },
                        "faxNumber": {
                          "type": "string"
                        },
                        "nationalIdentificationNumber": {
                          "type": "string",
                          "description": "National identification number of this entity, ie. INSEE code (France)"
                        },
                        "taxIdentificationNumber": {
                          "type": "string",
                          "description": "Tax identification number of this entity, ie. TFN (Australia), TIN (France)"
                        }
                      }
                    },
                    "options": {
                      "description": "The contact assigned to the location",
                      "type": "object"
                    }
                  }
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "This is the schema for representing item",
                    "type": "object",
                    "properties": {
                      "product": {
                        "description": "This is the schema for representing product's attributes.",
                        "type": "object",
                        "properties": {
                          "merchantProductId": {
                            "description": "The product unique identifier, provided by the merchant",
                            "type": "string",
                            "maxLength": 100
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "sku": {
                            "type": "string",
                            "description": "The sku of this product.",
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of this product.",
                            "maxLength": 500
                          },
                          "category": {
                            "type": "string",
                            "description": "The category of this product."
                          },
                          "unitOfMeasure": {
                            "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                            "type": "string",
                            "enum": [
                              "Bag",
                              "Barrel",
                              "Bolt",
                              "Box",
                              "Bunch",
                              "Bundle",
                              "Butt",
                              "Canister",
                              "Carton",
                              "Case",
                              "Centimeter",
                              "Container",
                              "Crate",
                              "Cylinder",
                              "Dozen",
                              "Each",
                              "Envelope",
                              "Foot",
                              "Kilogram",
                              "Kilograms",
                              "Liter",
                              "Meter",
                              "Number",
                              "Package",
                              "Packet",
                              "Pair",
                              "Pairs",
                              "Pallet",
                              "Piece",
                              "Pieces",
                              "Pound",
                              "Proof Liter",
                              "Roll",
                              "Set",
                              "Square Meter",
                              "Square Yard",
                              "Tube",
                              "Yard"
                            ]
                          },
                          "dimensions": {
                            "description": "This is the schema for representing dimensions",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "length",
                              "width",
                              "height",
                              "unitOfMeasurement"
                            ],
                            "properties": {
                              "length": {
                                "type": "number"
                              },
                              "width": {
                                "type": "number"
                              },
                              "height": {
                                "type": "number"
                              },
                              "unitOfMeasurement": {
                                "description": "The distance unit the dimension's properties are in",
                                "type": "string",
                                "enum": [
                                  "mm",
                                  "millimeter",
                                  "millimetre",
                                  "cm",
                                  "centimeter",
                                  "centimetre",
                                  "m",
                                  "meter",
                                  "metre",
                                  "ft",
                                  "foot",
                                  "feet",
                                  "in",
                                  "inch",
                                  "yd",
                                  "yard"
                                ]
                              }
                            }
                          },
                          "weight": {
                            "type": "object",
                            "required": [
                              "value",
                              "unitOfMeasurement"
                            ],
                            "properties": {
                              "value": {
                                "description": "The value of the weight unit",
                                "type": "number"
                              },
                              "unitOfMeasurement": {
                                "description": "The weight unit the value is",
                                "enum": [
                                  "g",
                                  "gram",
                                  "oz",
                                  "ounce",
                                  "kg",
                                  "kilogram",
                                  "lb",
                                  "pound"
                                ]
                              }
                            }
                          },
                          "monetaryValue": {
                            "description": "This is the schema for an representing money",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "The amount of the currency",
                                "type": "number"
                              },
                              "currency": {
                                "description": "The currency the money amount is",
                                "type": "string",
                                "maxLength": 3,
                                "minLength": 3
                              }
                            }
                          },
                          "isFragile": {
                            "type": "boolean",
                            "default": false
                          },
                          "isVirtual": {
                            "type": "boolean",
                            "default": false
                          },
                          "isPrePackaged": {
                            "description": "Whether the product has its own package",
                            "type": "boolean",
                            "default": false
                          },
                          "canRotateVertical": {
                            "description": "Whether the product can be rotated vertically",
                            "type": "boolean",
                            "default": true
                          },
                          "countryOfOrigin": {
                            "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2
                          },
                          "countryOfManufacture": {
                            "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2
                          },
                          "classificationCodes": {
                            "type": "object",
                            "description": "Classification codes of this product for export.",
                            "properties": {
                              "eccn": {
                                "type": "string",
                                "description": "Export Control Classification Number (ECCN).",
                                "minLength": 0,
                                "maxLength": 5
                              },
                              "scheduleBinfo": {
                                "type": "string",
                                "description": "Classification code for exporting goods out of the United States.",
                                "minLength": 0,
                                "maxLength": 15
                              },
                              "hsCode": {
                                "type": "string",
                                "description": "Harmonized Commodity Description and Coding System.",
                                "minLength": 2,
                                "maxLength": 10
                              }
                            }
                          },
                          "customAttributes": {
                            "default": [],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9_-]+$"
                                },
                                "value": {
                                  "type": [
                                    "number",
                                    "integer",
                                    "string",
                                    "boolean"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        }
                      },
                      "quantity": {
                        "type": "number",
                        "minimum": 1,
                        "description": "Value of unit of measure of this item."
                      }
                    }
                  }
                },
                "total": {
                  "description": "This is the schema for an representing money",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "amount",
                    "currency"
                  ],
                  "properties": {
                    "amount": {
                      "description": "The amount of the currency",
                      "type": "number"
                    },
                    "currency": {
                      "description": "The currency the money amount is",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "Product": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "product"
            ]
          },
          "attributes": {
            "description": "This is the schema for representing product's attributes.",
            "type": "object",
            "required": [
              "merchantProductId",
              "name"
            ],
            "properties": {
              "merchantProductId": {
                "description": "The product unique identifier, provided by the merchant",
                "type": "string",
                "maxLength": 100
              },
              "name": {
                "type": "string",
                "maxLength": 100
              },
              "sku": {
                "type": "string",
                "description": "The sku of this product.",
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "description": "The description of this product.",
                "maxLength": 500
              },
              "category": {
                "type": "string",
                "description": "The category of this product."
              },
              "unitOfMeasure": {
                "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                "type": "string",
                "enum": [
                  "Bag",
                  "Barrel",
                  "Bolt",
                  "Box",
                  "Bunch",
                  "Bundle",
                  "Butt",
                  "Canister",
                  "Carton",
                  "Case",
                  "Centimeter",
                  "Container",
                  "Crate",
                  "Cylinder",
                  "Dozen",
                  "Each",
                  "Envelope",
                  "Foot",
                  "Kilogram",
                  "Kilograms",
                  "Liter",
                  "Meter",
                  "Number",
                  "Package",
                  "Packet",
                  "Pair",
                  "Pairs",
                  "Pallet",
                  "Piece",
                  "Pieces",
                  "Pound",
                  "Proof Liter",
                  "Roll",
                  "Set",
                  "Square Meter",
                  "Square Yard",
                  "Tube",
                  "Yard"
                ]
              },
              "dimensions": {
                "description": "This is the schema for representing dimensions",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "length",
                  "width",
                  "height",
                  "unitOfMeasurement"
                ],
                "properties": {
                  "length": {
                    "type": "number"
                  },
                  "width": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The distance unit the dimension's properties are in",
                    "type": "string",
                    "enum": [
                      "mm",
                      "millimeter",
                      "millimetre",
                      "cm",
                      "centimeter",
                      "centimetre",
                      "m",
                      "meter",
                      "metre",
                      "ft",
                      "foot",
                      "feet",
                      "in",
                      "inch",
                      "yd",
                      "yard"
                    ]
                  }
                }
              },
              "weight": {
                "type": "object",
                "required": [
                  "value",
                  "unitOfMeasurement"
                ],
                "properties": {
                  "value": {
                    "description": "The value of the weight unit",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The weight unit the value is",
                    "enum": [
                      "g",
                      "gram",
                      "oz",
                      "ounce",
                      "kg",
                      "kilogram",
                      "lb",
                      "pound"
                    ]
                  }
                }
              },
              "monetaryValue": {
                "description": "This is the schema for an representing money",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "amount",
                  "currency"
                ],
                "properties": {
                  "amount": {
                    "description": "The amount of the currency",
                    "type": "number"
                  },
                  "currency": {
                    "description": "The currency the money amount is",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                  }
                }
              },
              "isFragile": {
                "type": "boolean",
                "default": false
              },
              "isVirtual": {
                "type": "boolean",
                "default": false
              },
              "isPrePackaged": {
                "description": "Whether the product has its own package",
                "type": "boolean",
                "default": false
              },
              "canRotateVertical": {
                "description": "Whether the product can be rotated vertically",
                "type": "boolean",
                "default": true
              },
              "countryOfOrigin": {
                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "countryOfManufacture": {
                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "classificationCodes": {
                "type": "object",
                "description": "Classification codes of this product for export.",
                "properties": {
                  "eccn": {
                    "type": "string",
                    "description": "Export Control Classification Number (ECCN).",
                    "minLength": 0,
                    "maxLength": 5
                  },
                  "scheduleBinfo": {
                    "type": "string",
                    "description": "Classification code for exporting goods out of the United States.",
                    "minLength": 0,
                    "maxLength": 15
                  },
                  "hsCode": {
                    "type": "string",
                    "description": "Harmonized Commodity Description and Coding System.",
                    "minLength": 2,
                    "maxLength": 10
                  }
                }
              },
              "customAttributes": {
                "default": [],
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "value": {
                      "type": [
                        "number",
                        "integer",
                        "string",
                        "boolean"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    }
  },
  "StoredProductSingle": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "product"
            ]
          },
          "id": {
            "description": "GUID of the object.",
            "type": "string"
          },
          "attributes": {
            "description": "This is the schema for representing product's attributes.",
            "type": "object",
            "required": [
              "merchantProductId",
              "name"
            ],
            "properties": {
              "merchantProductId": {
                "description": "The product unique identifier, provided by the merchant",
                "type": "string",
                "maxLength": 100
              },
              "name": {
                "type": "string",
                "maxLength": 100
              },
              "sku": {
                "type": "string",
                "description": "The sku of this product.",
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "description": "The description of this product.",
                "maxLength": 500
              },
              "category": {
                "type": "string",
                "description": "The category of this product."
              },
              "unitOfMeasure": {
                "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                "type": "string",
                "enum": [
                  "Bag",
                  "Barrel",
                  "Bolt",
                  "Box",
                  "Bunch",
                  "Bundle",
                  "Butt",
                  "Canister",
                  "Carton",
                  "Case",
                  "Centimeter",
                  "Container",
                  "Crate",
                  "Cylinder",
                  "Dozen",
                  "Each",
                  "Envelope",
                  "Foot",
                  "Kilogram",
                  "Kilograms",
                  "Liter",
                  "Meter",
                  "Number",
                  "Package",
                  "Packet",
                  "Pair",
                  "Pairs",
                  "Pallet",
                  "Piece",
                  "Pieces",
                  "Pound",
                  "Proof Liter",
                  "Roll",
                  "Set",
                  "Square Meter",
                  "Square Yard",
                  "Tube",
                  "Yard"
                ]
              },
              "dimensions": {
                "description": "This is the schema for representing dimensions",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "length",
                  "width",
                  "height",
                  "unitOfMeasurement"
                ],
                "properties": {
                  "length": {
                    "type": "number"
                  },
                  "width": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The distance unit the dimension's properties are in",
                    "type": "string",
                    "enum": [
                      "mm",
                      "millimeter",
                      "millimetre",
                      "cm",
                      "centimeter",
                      "centimetre",
                      "m",
                      "meter",
                      "metre",
                      "ft",
                      "foot",
                      "feet",
                      "in",
                      "inch",
                      "yd",
                      "yard"
                    ]
                  }
                }
              },
              "weight": {
                "type": "object",
                "required": [
                  "value",
                  "unitOfMeasurement"
                ],
                "properties": {
                  "value": {
                    "description": "The value of the weight unit",
                    "type": "number"
                  },
                  "unitOfMeasurement": {
                    "description": "The weight unit the value is",
                    "enum": [
                      "g",
                      "gram",
                      "oz",
                      "ounce",
                      "kg",
                      "kilogram",
                      "lb",
                      "pound"
                    ]
                  }
                }
              },
              "monetaryValue": {
                "description": "This is the schema for an representing money",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "amount",
                  "currency"
                ],
                "properties": {
                  "amount": {
                    "description": "The amount of the currency",
                    "type": "number"
                  },
                  "currency": {
                    "description": "The currency the money amount is",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                  }
                }
              },
              "isFragile": {
                "type": "boolean",
                "default": false
              },
              "isVirtual": {
                "type": "boolean",
                "default": false
              },
              "isPrePackaged": {
                "description": "Whether the product has its own package",
                "type": "boolean",
                "default": false
              },
              "canRotateVertical": {
                "description": "Whether the product can be rotated vertically",
                "type": "boolean",
                "default": true
              },
              "countryOfOrigin": {
                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "countryOfManufacture": {
                "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "classificationCodes": {
                "type": "object",
                "description": "Classification codes of this product for export.",
                "properties": {
                  "eccn": {
                    "type": "string",
                    "description": "Export Control Classification Number (ECCN).",
                    "minLength": 0,
                    "maxLength": 5
                  },
                  "scheduleBinfo": {
                    "type": "string",
                    "description": "Classification code for exporting goods out of the United States.",
                    "minLength": 0,
                    "maxLength": 15
                  },
                  "hsCode": {
                    "type": "string",
                    "description": "Harmonized Commodity Description and Coding System.",
                    "minLength": 2,
                    "maxLength": 10
                  }
                }
              },
              "customAttributes": {
                "default": [],
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "value": {
                      "type": [
                        "number",
                        "integer",
                        "string",
                        "boolean"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    }
  },
  "StoredProductCollection": {
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "type",
            "attributes",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "product"
              ]
            },
            "id": {
              "description": "GUID of the object.",
              "type": "string"
            },
            "attributes": {
              "description": "This is the schema for representing product's attributes.",
              "type": "object",
              "required": [
                "merchantProductId",
                "name"
              ],
              "properties": {
                "merchantProductId": {
                  "description": "The product unique identifier, provided by the merchant",
                  "type": "string",
                  "maxLength": 100
                },
                "name": {
                  "type": "string",
                  "maxLength": 100
                },
                "sku": {
                  "type": "string",
                  "description": "The sku of this product.",
                  "maxLength": 100
                },
                "description": {
                  "type": "string",
                  "description": "The description of this product.",
                  "maxLength": 500
                },
                "category": {
                  "type": "string",
                  "description": "The category of this product."
                },
                "unitOfMeasure": {
                  "description": "The unit of measure that describes the product. Should be a value from Measures column at https://www.ups.com/worldshiphelp/WS12/ENU/AppHelp/Codes/Unit_of_Measure_Codes_for_Invoices.htm",
                  "type": "string",
                  "enum": [
                    "Bag",
                    "Barrel",
                    "Bolt",
                    "Box",
                    "Bunch",
                    "Bundle",
                    "Butt",
                    "Canister",
                    "Carton",
                    "Case",
                    "Centimeter",
                    "Container",
                    "Crate",
                    "Cylinder",
                    "Dozen",
                    "Each",
                    "Envelope",
                    "Foot",
                    "Kilogram",
                    "Kilograms",
                    "Liter",
                    "Meter",
                    "Number",
                    "Package",
                    "Packet",
                    "Pair",
                    "Pairs",
                    "Pallet",
                    "Piece",
                    "Pieces",
                    "Pound",
                    "Proof Liter",
                    "Roll",
                    "Set",
                    "Square Meter",
                    "Square Yard",
                    "Tube",
                    "Yard"
                  ]
                },
                "dimensions": {
                  "description": "This is the schema for representing dimensions",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "length",
                    "width",
                    "height",
                    "unitOfMeasurement"
                  ],
                  "properties": {
                    "length": {
                      "type": "number"
                    },
                    "width": {
                      "type": "number"
                    },
                    "height": {
                      "type": "number"
                    },
                    "unitOfMeasurement": {
                      "description": "The distance unit the dimension's properties are in",
                      "type": "string",
                      "enum": [
                        "mm",
                        "millimeter",
                        "millimetre",
                        "cm",
                        "centimeter",
                        "centimetre",
                        "m",
                        "meter",
                        "metre",
                        "ft",
                        "foot",
                        "feet",
                        "in",
                        "inch",
                        "yd",
                        "yard"
                      ]
                    }
                  }
                },
                "weight": {
                  "type": "object",
                  "required": [
                    "value",
                    "unitOfMeasurement"
                  ],
                  "properties": {
                    "value": {
                      "description": "The value of the weight unit",
                      "type": "number"
                    },
                    "unitOfMeasurement": {
                      "description": "The weight unit the value is",
                      "enum": [
                        "g",
                        "gram",
                        "oz",
                        "ounce",
                        "kg",
                        "kilogram",
                        "lb",
                        "pound"
                      ]
                    }
                  }
                },
                "monetaryValue": {
                  "description": "This is the schema for an representing money",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "amount",
                    "currency"
                  ],
                  "properties": {
                    "amount": {
                      "description": "The amount of the currency",
                      "type": "number"
                    },
                    "currency": {
                      "description": "The currency the money amount is",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    }
                  }
                },
                "isFragile": {
                  "type": "boolean",
                  "default": false
                },
                "isVirtual": {
                  "type": "boolean",
                  "default": false
                },
                "isPrePackaged": {
                  "description": "Whether the product has its own package",
                  "type": "boolean",
                  "default": false
                },
                "canRotateVertical": {
                  "description": "Whether the product can be rotated vertically",
                  "type": "boolean",
                  "default": true
                },
                "countryOfOrigin": {
                  "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 2
                },
                "countryOfManufacture": {
                  "description": "An ISO 3166-1 alpha-2 compliant two-letter country code.",
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 2
                },
                "classificationCodes": {
                  "type": "object",
                  "description": "Classification codes of this product for export.",
                  "properties": {
                    "eccn": {
                      "type": "string",
                      "description": "Export Control Classification Number (ECCN).",
                      "minLength": 0,
                      "maxLength": 5
                    },
                    "scheduleBinfo": {
                      "type": "string",
                      "description": "Classification code for exporting goods out of the United States.",
                      "minLength": 0,
                      "maxLength": 15
                    },
                    "hsCode": {
                      "type": "string",
                      "description": "Harmonized Commodity Description and Coding System.",
                      "minLength": 2,
                      "maxLength": 10
                    }
                  }
                },
                "customAttributes": {
                  "default": [],
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9_-]+$"
                      },
                      "value": {
                        "type": [
                          "number",
                          "integer",
                          "string",
                          "boolean"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "CreateCredentialsRequest": {
    "description": "This describes the necessary information for a credentials creation request",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "integrationId",
              "configuration"
            ],
            "properties": {
              "integrationId": {
                "type": "string",
                "description": "The Temando Integration Id which identifies which integration the configuration belongs to."
              },
              "configuration": {
                "type": "object",
                "description": "The configuration object which contains the details used to interact with the carriers API."
              }
            }
          }
        }
      }
    }
  },
  "CreateCredentialsResponse": {
    "description": "This describes the necessary information for a credentials creation response",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "integrationId",
              "configuration"
            ],
            "properties": {
              "integrationId": {
                "type": "string",
                "description": "The Temando Integration Id which identifies which integration the configuration belongs to."
              },
              "configuration": {
                "type": "object",
                "description": "The configuration object which contains the details used to interact with the carriers API."
              }
            }
          }
        }
      }
    }
  },
  "UpdateCredentialsRequest": {
    "description": "This describes the necessary information for a credentials update request",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "integrationId",
              "configuration"
            ],
            "properties": {
              "integrationId": {
                "type": "string",
                "description": "The Temando Integration Id which identifies which integration the configuration belongs to."
              },
              "configuration": {
                "type": "object",
                "description": "The configuration object which contains the details used to interact with the carriers API."
              }
            }
          }
        }
      }
    }
  },
  "UpdateCredentialsResponse": {
    "description": "This describes the necessary information for a credentials update response",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "integrationId",
              "configuration"
            ],
            "properties": {
              "integrationId": {
                "type": "string",
                "description": "The Temando Integration Id which identifies which integration the configuration belongs to."
              },
              "configuration": {
                "type": "object",
                "description": "The configuration object which contains the details used to interact with the carriers API."
              }
            }
          }
        }
      }
    }
  },
  "ReadCredentialsResponse": {
    "description": "This describes the necessary information for a credentials read response",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "integrationId",
              "configuration"
            ],
            "properties": {
              "integrationId": {
                "type": "string",
                "description": "The Temando Integration Id which identifies which integration the configuration belongs to."
              },
              "configuration": {
                "type": "object",
                "description": "The configuration object which contains the details used to interact with the carriers API."
              }
            }
          }
        }
      }
    }
  },
  "ListCredentialsResponse": {
    "description": "Schema for representing a credentials list response.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "required": [
            "id",
            "type",
            "attributes"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "carrier-account-credentials"
              ]
            },
            "attributes": {
              "$ref": "#/definitions/Credentials"
            }
          }
        }
      }
    }
  },
  "Credentials": {
    "description": "This describes the necessary information for credentials",
    "type": "object",
    "properties": {}
  },
  "CarrierIntegration": {
    "description": "This describes a carrier-integration",
    "type": "object",
    "required": [
      "id",
      "type",
      "attributes"
    ],
    "properties": {
      "id": {
        "type": "string"
      },
      "type": {
        "enum": [
          "carrier-integration"
        ]
      },
      "attributes": {
        "type": "object",
        "required": [
          "name",
          "description",
          "logo",
          "services"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "services": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "CarrierIntegrationsListResponse": {
    "description": "A list of carrier-integrations.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#/definitions/CarrierIntegration"
        }
      }
    }
  },
  "CarrierIntegrationsReadResponse": {
    "description": "A carrier-integration.",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "$ref": "#/definitions/CarrierIntegration"
      }
    }
  },
  "CarrierRegistrationSupportResponse": {
    "description": "Schema for offline carrier registration response",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "carrier-registration-support"
            ]
          },
          "attributes": {
            "properties": {
              "ticketId": {
                "type": "string",
                "description": "The Jira ticket code of the created ticket."
              },
              "ticketLink": {
                "type": "string",
                "description": "A Link to the Jira ticket created from the request."
              }
            }
          }
        }
      }
    }
  },
  "shipmentV1": {
    "description": "Describes a shipment",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "$schema",
      "data"
    ],
    "properties": {
      "$schema": {
        "type": "string",
        "description": "The schema version used"
      },
      "data": {
        "type": "object",
        "required": [
          "id",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "the reference used to identifty a client"
          },
          "attributes": {
            "type": "object",
            "required": [
              "accountId",
              "carrier",
              "trackingReferences",
              "createdAt"
            ],
            "properties": {
              "accountId": {
                "description": "Client account id",
                "type": "string",
                "minLength": 1
              },
              "carrier": {
                "description": "A schema for representing carriers as valid ids.",
                "type": "string",
                "enum": [
                  "bpost",
                  "relais-colis",
                  "swiss-post",
                  "ups"
                ]
              },
              "credentialGUID": {
                "description": "The client credential GUID",
                "type": "string",
                "minLength": 1
              },
              "trackingReferences": {
                "description": "The tracking references",
                "type": "array",
                "items": {
                  "type": "string",
                  "minItems": 1
                }
              },
              "trackingEvents": {
                "type": "array",
                "description": "List of tracking events for shipment",
                "items": {
                  "description": "This is used by processQueue() to validate each event coming from the queue",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "$schema",
                    "data"
                  ],
                  "properties": {
                    "$schema": {
                      "type": "string",
                      "description": "The schema used"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Tracking event id"
                        },
                        "attributes": {
                          "type": "object",
                          "required": [
                            "carrier",
                            "trackingReference",
                            "status",
                            "occurredAt"
                          ],
                          "properties": {
                            "carrier": {
                              "description": "A schema for representing carriers as valid ids.",
                              "type": "string",
                              "enum": [
                                "bpost",
                                "relais-colis",
                                "swiss-post",
                                "ups"
                              ]
                            },
                            "trackingReference": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "rawEvent": {
                              "type": "string"
                            },
                            "rawStatus": {
                              "type": "string"
                            },
                            "occurredAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "when the tracking event occured"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  },
                  "minItems": 0
                }
              },
              "active": {
                "description": "Whether this shipment is currently being tracked. Defaults to true.",
                "type": "boolean"
              },
              "createdAt": {
                "description": "Date shipment was created"
              },
              "updatedAt": {
                "description": "Date shipment was last updated",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "shipmentEventsV1": {
    "description": "Describes shipment tracking events list",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "$schema",
      "data"
    ],
    "properties": {
      "$schema": {
        "type": "string",
        "description": "The schema version used"
      },
      "data": {
        "type": "object",
        "required": [
          "id",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The id of the shipment"
          },
          "attributes": {
            "type": "object",
            "required": [
              "accountId",
              "carrier",
              "trackingEvents"
            ],
            "properties": {
              "accountId": {
                "description": "Client account id",
                "type": "string",
                "minLength": 1
              },
              "carrier": {
                "description": "A schema for representing carriers as valid ids.",
                "type": "string",
                "enum": [
                  "bpost",
                  "relais-colis",
                  "swiss-post",
                  "ups"
                ]
              },
              "trackingEvents": {
                "type": "array",
                "description": "List of tracking events for shipment",
                "items": {
                  "description": "This is used by processQueue() to validate each event coming from the queue",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "$schema",
                    "data"
                  ],
                  "properties": {
                    "$schema": {
                      "type": "string",
                      "description": "The schema used"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Tracking event id"
                        },
                        "attributes": {
                          "type": "object",
                          "required": [
                            "carrier",
                            "trackingReference",
                            "status",
                            "occurredAt"
                          ],
                          "properties": {
                            "carrier": {
                              "description": "A schema for representing carriers as valid ids.",
                              "type": "string",
                              "enum": [
                                "bpost",
                                "relais-colis",
                                "swiss-post",
                                "ups"
                              ]
                            },
                            "trackingReference": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "rawEvent": {
                              "type": "string"
                            },
                            "rawStatus": {
                              "type": "string"
                            },
                            "occurredAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "when the tracking event occured"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  },
                  "minItems": 0
                }
              }
            }
          }
        }
      }
    }
  },
  "trackingEventV1": {
    "description": "This is used by processQueue() to validate each event coming from the queue",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "$schema",
      "data"
    ],
    "properties": {
      "$schema": {
        "type": "string",
        "description": "The schema used"
      },
      "data": {
        "type": "object",
        "required": [
          "id",
          "attributes"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Tracking event id"
          },
          "attributes": {
            "type": "object",
            "required": [
              "carrier",
              "trackingReference",
              "status",
              "occurredAt"
            ],
            "properties": {
              "carrier": {
                "description": "A schema for representing carriers as valid ids.",
                "type": "string",
                "enum": [
                  "bpost",
                  "relais-colis",
                  "swiss-post",
                  "ups"
                ]
              },
              "trackingReference": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "rawEvent": {
                "type": "string"
              },
              "rawStatus": {
                "type": "string"
              },
              "occurredAt": {
                "type": "string",
                "format": "date-time",
                "description": "when the tracking event occured"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "errorV1": {
    "description": "Definition for error responses for this service, based on RFC 7807.",
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "format": "uri",
        "description": "A URI reference that identifies the problem type."
      },
      "title": {
        "type": "string",
        "description": "A short, human-readable summary of the problem type."
      },
      "status": {
        "type": "integer",
        "description": "The HTTP status code generated by the origin server for this occurrence of the problem."
      },
      "detail": {
        "type": "string",
        "description": "A human-readable explanation specific to this occurrence of the problem."
      },
      "instance": {
        "type": "string",
        "description": "A URI reference that identifies the specific occurrence of the problem"
      },
      "errors": {
        "type": "array",
        "items": {
          "description": "Schema errors follow the same structure as those returned by AJV.",
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string"
            },
            "dataPath": {
              "type": "string",
              "description": "The JSON Pointer reference to the property that was validated."
            },
            "schemaPath": {
              "type": "string",
              "description": "The JSON Pointer reference to the schema of the keyword that failed validation."
            },
            "params": {
              "type": "object"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "Rule": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "rule"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "scope": {
                "description": "The scope of the rule.",
                "type": "string"
              },
              "code": {
                "description": "The code of the rule.",
                "type": "string"
              },
              "customAttributes": {
                "default": [],
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "value": {
                      "type": [
                        "number",
                        "integer",
                        "string",
                        "boolean"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "scope",
              "code"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      }
    },
    "required": [
      "data"
    ]
  },
  "StoredRule": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          },
          "type": {
            "enum": [
              "rule"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "scope": {
                "description": "The scope of the rule.",
                "type": "string"
              },
              "code": {
                "description": "The code of the rule.",
                "type": "string"
              },
              "customAttributes": {
                "default": [],
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "value": {
                      "type": [
                        "number",
                        "integer",
                        "string",
                        "boolean"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "scope",
              "code"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      }
    },
    "required": [
      "data"
    ]
  },
  "StoredRuleCollection": {
    "type": "object",
    "properties": {
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            },
            "type": {
              "enum": [
                "rule"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope of the rule.",
                  "type": "string"
                },
                "code": {
                  "description": "The code of the rule.",
                  "type": "string"
                },
                "customAttributes": {
                  "default": [],
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9_-]+$"
                      },
                      "value": {
                        "type": [
                          "number",
                          "integer",
                          "string",
                          "boolean"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "scope",
                "code"
              ]
            }
          },
          "required": [
            "id",
            "type",
            "attributes"
          ]
        }
      }
    },
    "required": [
      "data"
    ]
  },
  "SessionRequest": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "required": [
      "data"
    ],
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "session"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "bearerToken": {
                "description": "A `bearerToken` from `account` creation",
                "type": [
                  "string"
                ]
              },
              "accountId": {
                "description": "An `accountId` from `account` creation",
                "type": [
                  "string"
                ]
              },
              "email": {
                "description": "An email address",
                "type": [
                  "string"
                ]
              },
              "password": {
                "description": "A plaintext password string",
                "type": [
                  "string"
                ]
              },
              "scope": {
                "description": "A comma delimited list of scope names eg. 'a,b,c'",
                "type": [
                  "string"
                ]
              }
            },
            "oneOf": [
              {
                "required": [
                  "bearerToken",
                  "accountId"
                ]
              },
              {
                "required": [
                  "email",
                  "password"
                ]
              }
            ]
          }
        }
      }
    }
  },
  "SessionResponse": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Session response payload",
    "type": "object",
    "required": [
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "session"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "session": {
                "description": "An encrypted session/identity token.",
                "type": "string"
              },
              "expiry": {
                "description": "Epoch (in ms) for session expiry time",
                "type": "integer"
              }
            },
            "required": [
              "session",
              "expiry"
            ]
          }
        }
      }
    }
  }
}
